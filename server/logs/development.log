




info [Sat Apr 09 2022 17:40:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/login?asdf=1234
info [Sat Apr 09 2022 17:40:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Sat Apr 09 2022 17:40:10 GMT+0800 (China Standard Time)]  QUERY: { asdf: '1234' }
info [Sat Apr 09 2022 17:40:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Sat Apr 09 2022 17:40:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/login?asdf=1234
info [Sat Apr 09 2022 17:40:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Sat Apr 09 2022 17:40:23 GMT+0800 (China Standard Time)]  QUERY: { asdf: '1234' }
info [Sat Apr 09 2022 17:40:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Sat Apr 09 2022 17:40:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/login?asdf=1234
info [Sat Apr 09 2022 17:40:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Sat Apr 09 2022 17:40:24 GMT+0800 (China Standard Time)]  QUERY: { asdf: '1234' }
info [Sat Apr 09 2022 17:40:24 GMT+0800 (China Standard Time)]  BODY: {}





info [Sat Apr 09 2022 19:42:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/login?asdf=1234
info [Sat Apr 09 2022 19:42:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Sat Apr 09 2022 19:42:41 GMT+0800 (China Standard Time)]  QUERY: { asdf: '1234' }
info [Sat Apr 09 2022 19:42:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Sat Apr 09 2022 19:42:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/favicon.ico
info [Sat Apr 09 2022 19:42:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Sat Apr 09 2022 19:42:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Sat Apr 09 2022 19:42:44 GMT+0800 (China Standard Time)]  BODY: {}










info [Mon Apr 11 2022 02:27:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:27:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:27:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:27:06 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:34:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:34:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:34:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:34:41 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:35:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:35:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:35:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:35:42 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:36:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:36:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:36:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:36:32 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:36:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:36:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:36:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:36:57 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:38:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:38:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:38:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:38:35 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }

info [Mon Apr 11 2022 02:40:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 02:40:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 02:40:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 02:40:01 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }




info [Mon Apr 11 2022 04:07:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:07:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:07:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:07:09 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 04:13:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:13:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:13:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:13:18 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:13:18 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!

info [Mon Apr 11 2022 04:14:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:14:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:14:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:14:13 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:14:14 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:14:14 GMT+0800 (China Standard Time)]  ReferenceError: jwt is not defined
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:13:22)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)
    at router (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:47:12)


info [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:14:50 GMT+0800 (China Standard Time)]  ReferenceError: jwt is not defined
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:13:22)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)
    at router (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:47:12)

info [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:15:26 GMT+0800 (China Standard Time)]  JsonWebTokenError: jwt malformed
    at Object.module.exports [as verify] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\jsonwebtoken\verify.js:63:17)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:16:26)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)


info [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:16:38 GMT+0800 (China Standard Time)]  JsonWebTokenError: jwt malformed
    at Object.module.exports [as verify] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\jsonwebtoken\verify.js:63:17)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:16:26)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)

info [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:18:59 GMT+0800 (China Standard Time)]  { code: 4, status: 401 }

info [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:20:36 GMT+0800 (China Standard Time)]  { code: 4, status: 401 }

info [Mon Apr 11 2022 04:21:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:21:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:21:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:21:19 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:21:19 GMT+0800 (China Standard Time)]  Error occured:  { code: 4, status: 401 }

info [Mon Apr 11 2022 04:21:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:21:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:21:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:21:53 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:21:53 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!

info [Mon Apr 11 2022 04:22:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:22:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:22:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:22:14 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:22:14 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:22:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:22:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:22:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:22:42 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:22:42 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:22:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:22:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:22:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:22:52 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:22:52 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:22:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:22:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:22:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:22:58 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:22:58 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!

info [Mon Apr 11 2022 04:24:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:24:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:24:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:24:14 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:24:14 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:24:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 04:24:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:24:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:24:20 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:24:21 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT * FROM `users` WHERE `id` = `fieldCount` = 0, `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, `message` = '', `protocol41` = true, `changedRows` = 0, `insert_id` = 8, `affected_rows` = 1, `changed_rows` = 0"
}

info [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:29:18 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT * FROM `users` WHERE `id` = `fieldCount` = 0, `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, `message` = '', `protocol41` = true, `changedRows` = 0, `insert_id` = 8, `affected_rows` = 1, `changed_rows` = 0"
}
info [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:29:23 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT * FROM `users` WHERE `id` = `fieldCount` = 0, `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, `message` = '', `protocol41` = true, `changedRows` = 0, `insert_id` = 8, `affected_rows` = 1, `changed_rows` = 0"
}

info [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:29:35 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, ...' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT * FROM `users` WHERE `id` = `fieldCount` = 0, `affectedRows` = 1, `insertId` = 8, `serverStatus` = 2, `warningCount` = 0, `message` = '', `protocol41` = true, `changedRows` = 0, `insert_id` = 8, `affected_rows` = 1, `changed_rows` = 0"
}

info [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:32:59 GMT+0800 (China Standard Time)]  { code: 3, status: 402 }

info [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:33:14 GMT+0800 (China Standard Time)]  { code: 3, status: 402 }

info [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:33:38 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `iat` = 1649622261, `exp` = 1649625861' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `iat` = 1649622261, `exp` = 1649625861' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT * FROM `users` WHERE `id` = `id` = '[object Object]', `iat` = 1649622261, `exp` = 1649625861"
}


info [Mon Apr 11 2022 04:42:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:42:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:42:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:42:06 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:42:06 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:42:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:42:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:42:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:42:09 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:42:09 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:42:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 04:42:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:42:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:42:17 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
error [Mon Apr 11 2022 04:42:18 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:42:18 GMT+0800 (China Standard Time)]  ReferenceError: newUserId is not defined
    at signup (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:46:25)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)

info [Mon Apr 11 2022 04:43:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 04:43:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:43:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:43:06 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:43:07 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `iat` = 1649623387, `exp` = 1649626987' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:16:63)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `iat` = 1649623387, `exp` = 1649626987' at line 1",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT * FROM `users` WHERE `id` = `id` = 10, `iat` = 1649623387, `exp` = 1649626987'
}

info [Mon Apr 11 2022 04:44:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:44:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:44:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:44:07 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:44:08 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 04:44:08 GMT+0800 (China Standard Time)]  ReferenceError: newUserId is not defined
    at me (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:69:25)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)

info [Mon Apr 11 2022 04:44:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:44:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:44:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:44:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 04:45:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:45:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:45:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:45:10 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 04:46:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:46:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:46:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:46:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 04:51:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:51:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:51:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:51:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 04:55:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:55:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:55:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:55:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 04:56:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:56:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:56:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:56:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 04:56:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:56:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:56:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:56:46 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:56:46 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 04:56:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:56:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:56:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:56:53 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:56:53 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!

info [Mon Apr 11 2022 04:58:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:58:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:58:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:58:42 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 04:58:42 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!

info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 04:59:45 GMT+0800 (China Standard Time)]  BODY: {}


info [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 05:00:28 GMT+0800 (China Standard Time)]  { code: 3, status: 402 }
info [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 05:01:29 GMT+0800 (China Standard Time)]  { code: 3, status: 402 }
info [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 05:01:31 GMT+0800 (China Standard Time)]  { code: 3, status: 402 }
info [Mon Apr 11 2022 05:01:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 05:01:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 05:01:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 05:01:54 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
error [Mon Apr 11 2022 05:01:54 GMT+0800 (China Standard Time)]  Error occured:  Email duplicated! Please use another one!
info [Mon Apr 11 2022 05:01:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 05:01:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 05:01:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 05:01:58 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: '1234' }
error [Mon Apr 11 2022 05:01:58 GMT+0800 (China Standard Time)]  Error occured:  Email duplicated! Please use another one!
info [Mon Apr 11 2022 08:46:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 08:46:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:46:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:46:12 GMT+0800 (China Standard Time)]  BODY: { username: 'Test', email: 'test@gmail.com', password: 'asdf' }
error [Mon Apr 11 2022 08:46:12 GMT+0800 (China Standard Time)]  Error occured:  Email duplicated! Please use another one!

info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  BODY: { username: 'test1', email: 'test1@gmail.com', password: 'asdf' }
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:50:05 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'test' }
error [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 08:55:25 GMT+0800 (China Standard Time)]  { code: 2, status: 402 }
info [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'test' }
error [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 08:55:32 GMT+0800 (China Standard Time)]  { code: 2, status: 402 }

info [Mon Apr 11 2022 08:56:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 08:56:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 08:56:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 08:56:02 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'test' }
error [Mon Apr 11 2022 08:56:02 GMT+0800 (China Standard Time)]  Error occured:  Email or Password is not correct!
info [Mon Apr 11 2022 09:08:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:08:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:08:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:08:41 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'asdf' }
error [Mon Apr 11 2022 09:08:41 GMT+0800 (China Standard Time)]  Error occured:  Email or Password is not correct!


info [Mon Apr 11 2022 09:10:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:10:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:10:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:10:21 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'asdf' }
error [Mon Apr 11 2022 09:10:21 GMT+0800 (China Standard Time)]  Error occured:  Password is not correct!

info [Mon Apr 11 2022 09:10:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:10:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:10:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:10:46 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'asdf' }
error [Mon Apr 11 2022 09:10:46 GMT+0800 (China Standard Time)]  Error occured:  Email is not exist!
info [Mon Apr 11 2022 09:11:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 09:11:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:11:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:11:04 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User', email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 09:11:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:11:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:11:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:11:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:11:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:11:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:11:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:11:45 GMT+0800 (China Standard Time)]  BODY: {}




info [Mon Apr 11 2022 09:30:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:30:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:30:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:30:49 GMT+0800 (China Standard Time)]  BODY: {}


info [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 09:37:28 GMT+0800 (China Standard Time)]  Error: Illegal arguments: string, undefined
    at _async (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\bcryptjs\dist\bcrypt.js:286:46)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\bcryptjs\dist\bcrypt.js:307:17
    at new Promise (<anonymous>)
    at Object.bcrypt.compare (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\bcryptjs\dist\bcrypt.js:306:20)
    at signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:26:50)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)

info [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 09:40:11 GMT+0800 (China Standard Time)]  ReferenceError: newUserId is not defined
    at signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:37:29)

info [Mon Apr 11 2022 09:42:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 09:42:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:42:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:42:05 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 09:42:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:42:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:42:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:42:06 GMT+0800 (China Standard Time)]  BODY: {}






info [Mon Apr 11 2022 09:45:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:45:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:45:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:45:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:50:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:50:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:50:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:50:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:50:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:50:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:50:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:50:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:54:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:54:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:54:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:54:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:56:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:56:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:56:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:56:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:57:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:57:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:57:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:57:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 09:58:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 09:58:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 09:58:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 09:58:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:00:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:00:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:00:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:00:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:01:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:01:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:01:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:01:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:07:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:07:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:07:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:07:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:09:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:09:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:09:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:09:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:09:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:09:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:09:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:09:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:09:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:09:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:09:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:09:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:09:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:09:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:09:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:09:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:09:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:09:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:09:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:09:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:10:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 10:10:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:10:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:10:22 GMT+0800 (China Standard Time)]  BODY: { title: 'Title1', text: 'Title1' }
error [Mon Apr 11 2022 10:10:22 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 10:10:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:10:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:10:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:10:49 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 10:11:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:11:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:11:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:11:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:11:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:11:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:11:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:11:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:11:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:11:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:11:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 10:11:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:11:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:11:51 GMT+0800 (China Standard Time)]  BODY: { title: 'Title1', text: 'Title1' }
error [Mon Apr 11 2022 10:11:51 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!

info [Mon Apr 11 2022 10:12:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:12:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:12:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:12:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  BODY: { title: 'Title', text: 'Title' }
error [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 10:13:00 GMT+0800 (China Standard Time)]  ReferenceError: username is not defined
    at createBlog (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:21:13)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:19:9)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)

info [Mon Apr 11 2022 10:13:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 10:13:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:13:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:13:27 GMT+0800 (China Standard Time)]  BODY: { title: 'Title', text: 'Title' }



info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:50:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:50:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:50:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:50:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:50:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:53:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:54:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:56:12 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 10:57:08 GMT+0800 (China Standard Time)]  BODY: {}



info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 11:07:51 GMT+0800 (China Standard Time)]  Error: where(): You haven't provided any key value pairs to limit the resultset by.
    at Single._where (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:474:18)
    at Single.where (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:412:20)
    at Object.readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:24:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:36:23)

info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 11:08:21 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:25:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `id`, `users`.`username` `username`, `title`, `text`, `imageUrl` FROM `blogs`, `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id`'
}

info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 11:08:46 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:3:25)
    at readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:39:9)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)

info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 11:09:03 GMT+0800 (China Standard Time)]  Error: ER_NON_UNIQ_ERROR: Column 'id' in field list is ambiguous
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:25:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NON_UNIQ_ERROR',
  errno: 1052,
  sqlMessage: "Column 'id' in field list is ambiguous",
  sqlState: '23000',
  index: 0,
  sql: 'SELECT `id`, `users`.`username` `username`, `title`, `text`, `imageUrl` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id`'
}


info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:14:04 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 11:17:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:17:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:17:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:17:09 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:19:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:20:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:20:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:20:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:20:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:23:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:24:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:24:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:24:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:24:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:24:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:24:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:24:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:24:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:25:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:25:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:25:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:25:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:25:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:25:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:26:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:26:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:26:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:26:03 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 11:27:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:27:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:27:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:27:05 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 11:28:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:28:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:28:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:28:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:28:28 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:28:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 11:28:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:28:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:28:42 GMT+0800 (China Standard Time)]  BODY: { title: 'Title1', text: 'Title1' }
info [Mon Apr 11 2022 11:28:42 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 11:28:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:28:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:28:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:28:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:28:43 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:31:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:32:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:32:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:32:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:32:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:32:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:32:24 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:32:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:32:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:32:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:32:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:32:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:28 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:34:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:34:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:41 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:34:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 11:34:49 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:58:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 11:58:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:58:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:58:03 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 11:58:03 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY0OTQ4MywiZXhwIjoxNjQ5NjUzMDgzfQ.wYkboaWh1l5ffvG0pW5r8nN_YfG70ndXedgs0sIrHr0',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 11:58:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:58:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:58:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:58:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:58:04 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 11:58:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:01:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:01:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 12:01:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:01:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:01:52 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 12:02:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 12:02:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:11 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 12:02:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 12:02:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:14 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 12:02:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 12:02:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:43 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 12:02:43 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY0OTc2MywiZXhwIjoxNjQ5NjUzMzYzfQ.2AM2PCRMmjTE1Y5q2QaLBG0WQ0A2e2BIiTQWYAjMIsY',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 12:02:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:02:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:02:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:02:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:02:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:02:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:02:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:02:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:02:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:02:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:02:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:03:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:03:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:03:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:03:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:03:37 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:03:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:03:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:03:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:03:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:03:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:03:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:03:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:03:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:03:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:03:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:04:52 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:04:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:04:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:04:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:04:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:04:59 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:05:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:05:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:05:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:05:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:05:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:05:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:05:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:05:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:05:37 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:43:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:43:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:43:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:10 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  BODY: {
  title: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
  text: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n'
}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:43:42 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    },
    RowDataPacket {
      id: 3,
      username: 'Test User',
      title: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      text: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:44:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 12:44:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:44:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:44:03 GMT+0800 (China Standard Time)]  BODY: {
  title: 'asdfawefwefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
  text: 'asdfawefwefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'
}
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:44:04 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    },
    RowDataPacket {
      id: 3,
      username: 'Test User',
      title: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      text: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      imageUrl: null
    },
    RowDataPacket {
      id: 4,
      username: 'Test User',
      title: 'asdfawefweffffffffffffffffffffffffffffffffffffffff',
      text: 'asdfawefwefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:44:17 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 1,
      username: 'Test User',
      title: 'Title',
      text: 'Title',
      imageUrl: null
    },
    RowDataPacket {
      id: 2,
      username: 'Test User',
      title: 'Title1',
      text: 'Title1',
      imageUrl: null
    },
    RowDataPacket {
      id: 3,
      username: 'Test User',
      title: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      text: 'asdf\nqw\nef\nqaewf\naw\nf\nawe\na\nw\nefw\n',
      imageUrl: null
    },
    RowDataPacket {
      id: 4,
      username: 'Test User',
      title: 'asdfawefweffffffffffffffffffffffffffffffffffffffff',
      text: 'asdfawefwefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:09 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 12:45:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:45:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:45:20 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:45:24 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title1',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD'
}
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 12:45:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 12:45:43 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 13:03:56 GMT+0800 (China Standard Time)]  {
  '0': 'U',
  '1': 'n',
  '2': 'a',
  '3': 'u',
  '4': 't',
  '5': 'h',
  '6': 'o',
  '7': 'r',
  '8': 'i',
  '9': 'z',
  '10': 'e',
  '11': 'd',
  '12': '!',
  '13': ' ',
  '14': 'P',
  '15': 'l',
  '16': 'e',
  '17': 'a',
  '18': 's',
  '19': 'e',
  '20': ' ',
  '21': 'l',
  '22': 'o',
  '23': 'g',
  '24': ' ',
  '25': 'i',
  '26': 'n',
  '27': '!',
  message: ''
}
info [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 13:05:17 GMT+0800 (China Standard Time)]  {
  '0': 'U',
  '1': 'n',
  '2': 'a',
  '3': 'u',
  '4': 't',
  '5': 'h',
  '6': 'o',
  '7': 'r',
  '8': 'i',
  '9': 'z',
  '10': 'e',
  '11': 'd',
  '12': '!',
  '13': ' ',
  '14': 'P',
  '15': 'l',
  '16': 'e',
  '17': 'a',
  '18': 's',
  '19': 'e',
  '20': ' ',
  '21': 'l',
  '22': 'o',
  '23': 'g',
  '24': ' ',
  '25': 'i',
  '26': 'n',
  '27': '!',
  message: ''
}
info [Mon Apr 11 2022 13:06:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 13:06:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:06:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:06:02 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY1MzU2MywiZXhwIjoxNjQ5NjU3MTYzfQ.eQXHOsVxF7g4nTeXuR0pVV2TVlNysUeCFVJ4Cx448Qc',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:06:03 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:06:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:06:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:06:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:06:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:06:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:07:57 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:24 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:09:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  BODY: { title: 'Title2', text: 'Title2' }
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:10:04 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  BODY: { title: 'Title3', text: 'Title3' }
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:10:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  BODY: { title: 'Title4', text: 'Title4' }
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:10:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 13:18:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:18:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:18:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:18:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:18:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:18:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:18:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:18:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:18:47 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:18:47 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:19:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:19:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:19:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:19:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:19:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:25:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:25:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:25:55 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:27:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:27:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:27:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:27:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:27:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:35:55 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:37:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:37:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:37:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:37:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:37:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:37:11 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:37:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:37:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:37:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:37:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:37:28 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:38:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:38:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:15 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:20 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:38:33 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:38:58 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:39:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:39:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:39:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:39:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:39:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:39:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:40:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:40:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:40:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:40:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:40:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:40:19 GMT+0800 (China Standard Time)]  { message: '' }

info [Mon Apr 11 2022 13:43:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:43:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:43:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:43:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  Error: ER_NON_UNIQ_ERROR: Column 'id' in where clause is ambiguous
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:44:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NON_UNIQ_ERROR',
  errno: 1052,
  sqlMessage: "Column 'id' in where clause is ambiguous",
  sqlState: '23000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` WHERE `id` = 5'
}
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  {
  '0': 'U',
  '1': 'n',
  '2': 'k',
  '3': 'n',
  '4': 'o',
  '5': 'w',
  '6': 'n',
  '7': ' ',
  '8': 'E',
  '9': 'r',
  '10': 'r',
  '11': 'o',
  '12': 'r',
  '13': ' ',
  '14': 'o',
  '15': 'c',
  '16': 'c',
  '17': 'u',
  '18': 'r',
  '19': 'e',
  '20': 'd',
  '21': '!',
  '22': ' ',
  '23': 'P',
  '24': 'l',
  '25': 'e',
  '26': 'a',
  '27': 's',
  '28': 'e',
  '29': ' ',
  '30': 'c',
  '31': 'o',
  '32': 'n',
  '33': 't',
  '34': 'a',
  '35': 'c',
  '36': 't',
  '37': ' ',
  '38': 'w',
  '39': 'i',
  '40': 't',
  '41': 'h',
  '42': ' ',
  '43': 'M',
  '44': 'a',
  '45': 'n',
  '46': 'a',
  '47': 'g',
  '48': 'e',
  '49': 'r',
  '50': '!',
  message: ''
}
info [Mon Apr 11 2022 13:43:59 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:45:08 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:45:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 13:45:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:45:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:45:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:45:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:47:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 13:47:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:47:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:47:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:47:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:47:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 13:47:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:47:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:47:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:47:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:48:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 13:48:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:48:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:48:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:48:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:48:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:51:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:34 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:51:40 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:52:30 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:52:55 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:54:38 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 13:58:34 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:59:40 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 13:59:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 13:59:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 13:59:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 13:59:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 13:59:46 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:04:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 14:04:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 14:04:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:04:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:04:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:04:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 14:05:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}










info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY1ODgxNiwiZXhwIjoxNjQ5NjYyNDE2fQ.ofPQZ2nseMhihSn44uEKuQi9tcZPe_kjKxCWKMnB2M8',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:33:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 14:33:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 14:33:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:33:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:33:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:33:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:33:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 14:33:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:33:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:33:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:33:41 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:36:28 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 14:36:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 14:36:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:36:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:36:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:36:30 GMT+0800 (China Standard Time)]  { message: '' }

info [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  Error occured:  You thumb up it before. Can't do it again!
info [Mon Apr 11 2022 14:37:51 GMT+0800 (China Standard Time)]  {
  '0': 'Y',
  '1': 'o',
  '2': 'u',
  '3': ' ',
  '4': 't',
  '5': 'h',
  '6': 'u',
  '7': 'm',
  '8': 'b',
  '9': ' ',
  '10': 'u',
  '11': 'p',
  '12': ' ',
  '13': 'i',
  '14': 't',
  '15': ' ',
  '16': 'b',
  '17': 'e',
  '18': 'f',
  '19': 'o',
  '20': 'r',
  '21': 'e',
  '22': '.',
  '23': ' ',
  '24': 'C',
  '25': 'a',
  '26': 'n',
  '27': "'",
  '28': 't',
  '29': ' ',
  '30': 'd',
  '31': 'o',
  '32': ' ',
  '33': 'i',
  '34': 't',
  '35': ' ',
  '36': 'a',
  '37': 'g',
  '38': 'a',
  '39': 'i',
  '40': 'n',
  '41': '!',
  message: ''
}

info [Mon Apr 11 2022 14:38:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 14:38:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:38:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:38:43 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 14:38:44 GMT+0800 (China Standard Time)]  Error occured:  You thumb up it before. Can't do it again!
info [Mon Apr 11 2022 14:38:44 GMT+0800 (China Standard Time)]  {
  '0': 'Y',
  '1': 'o',
  '2': 'u',
  '3': ' ',
  '4': 't',
  '5': 'h',
  '6': 'u',
  '7': 'm',
  '8': 'b',
  '9': ' ',
  '10': 'u',
  '11': 'p',
  '12': ' ',
  '13': 'i',
  '14': 't',
  '15': ' ',
  '16': 'b',
  '17': 'e',
  '18': 'f',
  '19': 'o',
  '20': 'r',
  '21': 'e',
  '22': '.',
  '23': ' ',
  '24': 'C',
  '25': 'a',
  '26': 'n',
  '27': "'",
  '28': 't',
  '29': ' ',
  '30': 'd',
  '31': 'o',
  '32': ' ',
  '33': 'i',
  '34': 't',
  '35': ' ',
  '36': 'a',
  '37': 'g',
  '38': 'a',
  '39': 'i',
  '40': 'n',
  '41': '!',
  message: ''
}

info [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 14:39:14 GMT+0800 (China Standard Time)]  {
  '0': 'Y',
  '1': 'o',
  '2': 'u',
  '3': ' ',
  '4': 'c',
  '5': 'a',
  '6': 'n',
  '7': "'",
  '8': 't',
  '9': ' ',
  '10': 't',
  '11': 'h',
  '12': 'u',
  '13': 'm',
  '14': 'b',
  '15': ' ',
  '16': 'u',
  '17': 'p',
  '18': ' ',
  '19': 'y',
  '20': 'o',
  '21': 'u',
  '22': 'r',
  '23': 's',
  '24': 'e',
  '25': 'l',
  '26': 'f',
  '27': '!',
  message: ''
}

info [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 14:41:25 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 14:48:32 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 15:00:03 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:02:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 15:02:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 15:02:54 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }

info [Mon Apr 11 2022 15:04:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 15:04:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:04:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:04:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 15:04:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 15:04:19 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }

info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
error [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  Error: ER_BAD_FIELD_ERROR: Unknown column 'likes.blogId' in 'field list'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:46:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'likes.blogId' in 'field list'",
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT( `likes.blogId` ) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` WHERE `blogs`.`id` = 5'
}
info [Mon Apr 11 2022 15:18:53 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 15:21:40 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 15:21:41 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 15:21:41 GMT+0800 (China Standard Time)]  Error: ER_BAD_FIELD_ERROR: Unknown column 'likes.blogId' in 'field list'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:46:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'likes.blogId' in 'field list'",
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT( `likes.blogId` ) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` WHERE `blogs`.`id` = 5'
}
info [Mon Apr 11 2022 15:21:41 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Mon Apr 11 2022 15:21:41 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY2NjA0MiwiZXhwIjoxNjQ5NjY5NjQyfQ.VHWaZ3srI8LWciZxOwltSzuDWexT51Xo_JT0u3Ypf6Q',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:34:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 16:34:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 16:34:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:34:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:34:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:34:07 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  Error: ER_BAD_FIELD_ERROR: Unknown column 'likes.blogId' in 'field list'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:47:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'likes.blogId' in 'field list'",
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT( `likes.blogId` ) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` WHERE `blogs`.`id` = 5 GROUP BY `blogs`.`id`'
}
info [Mon Apr 11 2022 16:36:31 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 16:40:13 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 16:40:39 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 16:41:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}










info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 16:59:12 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:01:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:03:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:03:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:03:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:03:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:03:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:04:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:04:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:04:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:04:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:04:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:04:41 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:04:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:04:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:04:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:04:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:04:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:05:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:05:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:05:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:05:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:05:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:05:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:07:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:07:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:07:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:07:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:07:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:07:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:07:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:07:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:08:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:08:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:08:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:08:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:08:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:08:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:08:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:08:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:08:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:08:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:08:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:08:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:09:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:09:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:09:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:09:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:09:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:09:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:09:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:09:59 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 17:11:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:11:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:11:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:11:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:11:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:13:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:13:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:13:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:13:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:13:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:13:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:13:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:13:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:13:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:13:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:15:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:15:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:15:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:15:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:15:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:15:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:15:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:15:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:15:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:15:16 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment
info [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }
error [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  Error occured:  Blog is not exist!
info [Mon Apr 11 2022 17:15:29 GMT+0800 (China Standard Time)]  { message: 'Blog is not exist!' }
info [Mon Apr 11 2022 17:17:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:17:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:17:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:17:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:17:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:17:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 17:17:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:17:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:17:21 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }
info [Mon Apr 11 2022 17:23:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 17:23:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:23:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:23:00 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }

info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }
error [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  ReferenceError: comment is not defined
    at createComment (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:40:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Mon Apr 11 2022 17:23:50 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:24:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 17:24:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:24:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:24:23 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }
error [Mon Apr 11 2022 17:24:24 GMT+0800 (China Standard Time)]  Error occured:  undefined
info [Mon Apr 11 2022 17:24:24 GMT+0800 (China Standard Time)]  { message: '' }

info [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment1 to Title1', text: 'Comment1 to Title1' }
error [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  Error occured:  undefined
info [Mon Apr 11 2022 17:26:40 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 17:27:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:27:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:27:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:27:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:27:43 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:27:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:27:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:27:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:27:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:27:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:28:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:28:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:28:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:28:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:28:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:28:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:28:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:28:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:28:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:28:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  Error occured:  undefined
info [Mon Apr 11 2022 17:30:04 GMT+0800 (China Standard Time)]  { message: '' }

info [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  Error occured:  You can't comment to your blog yourself!
info [Mon Apr 11 2022 17:31:38 GMT+0800 (China Standard Time)]  { message: "You can't comment to your blog yourself!" }
info [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  Error occured:  You can't comment to your blog yourself!
info [Mon Apr 11 2022 17:31:43 GMT+0800 (China Standard Time)]  { message: "You can't comment to your blog yourself!" }
info [Mon Apr 11 2022 17:32:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 17:32:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:32:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:32:35 GMT+0800 (China Standard Time)]  BODY: { username: 'Test1', email: 'test1@gmail.com', password: '1234' }
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  {
  userId: 14,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTQsImlhdCI6MTY0OTY2OTU1NiwiZXhwIjoxNjQ5NjczMTU2fQ.-u9xqLWT3UUPPS0Y5yZkpXDMverS3MsIQhBydxZONcQ',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:32:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:32:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:32:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:32:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:32:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:32:38 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:32:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:32:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:32:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:32:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:32:41 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  Error: ER_BAD_FIELD_ERROR: Unknown column 'userId' in 'where clause'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readComments (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:22:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'userId' in 'where clause'",
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT `id` FROM `comments` WHERE `mainBlogId` = 6 AND `userId` = 14'
}
info [Mon Apr 11 2022 17:32:54 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  Error: ER_NON_UNIQ_ERROR: Column 'id' in field list is ambiguous
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readComments (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:26:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NON_UNIQ_ERROR',
  errno: 1052,
  sqlMessage: "Column 'id' in field list is ambiguous",
  sqlState: '23000',
  index: 0,
  sql: 'SELECT `id` FROM `comments` RIGHT JOIN `blogs` ON `comments`.`commentBlogId` = `blogs`.`id` WHERE `blogs`.`mainBlogId` = 6 AND `blogs`.`userId` = 14'
}
info [Mon Apr 11 2022 17:35:16 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  Error: ER_BAD_FIELD_ERROR: Unknown column 'blogs.mainBlogId' in 'where clause'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readComments (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:26:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_BAD_FIELD_ERROR',
  errno: 1054,
  sqlMessage: "Unknown column 'blogs.mainBlogId' in 'where clause'",
  sqlState: '42S22',
  index: 0,
  sql: 'SELECT `blogs`.`id` FROM `comments` RIGHT JOIN `blogs` ON `comments`.`commentBlogId` = `blogs`.`id` WHERE `blogs`.`mainBlogId` = 6 AND `blogs`.`userId` = 14'
}
info [Mon Apr 11 2022 17:35:35 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:36:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:36:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:36:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:36:22 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:36:23 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:36:23 GMT+0800 (China Standard Time)]  TypeError: commentsService.createLike is not a function
    at createComment (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:56:43)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Mon Apr 11 2022 17:36:23 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }


info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  Error: ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.insert (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:108:93)
    at Object.createComment (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:7:51)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_REFERENCED_ROW_2',
  errno: 1452,
  sqlMessage: 'Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)',
  sqlState: '23000',
  index: 0,
  sql: 'INSERT INTO `comments` (`mainBlogId`) VALUES (6)'
}
info [Mon Apr 11 2022 17:37:14 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }


info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  Error: ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.insert (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:108:93)
    at Object.createComment (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:8:51)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_REFERENCED_ROW_2',
  errno: 1452,
  sqlMessage: 'Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)',
  sqlState: '23000',
  index: 0,
  sql: 'INSERT INTO `comments` (`mainBlogId`) VALUES (6)'
}
info [Mon Apr 11 2022 17:39:14 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
error [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  Error: ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.insert (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:108:93)
    at Object.createComment (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\comments.service.js:8:51)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_REFERENCED_ROW_2',
  errno: 1452,
  sqlMessage: 'Cannot add or update a child row: a foreign key constraint fails (`test-blog`.`comments`, CONSTRAINT `Comment Blog Id` FOREIGN KEY (`commentBlogId`) REFERENCES `blogs` (`id`) ON DELETE CASCADE)',
  sqlState: '23000',
  index: 0,
  sql: 'INSERT INTO `comments` (`mainBlogId`) VALUES (6)'
}
info [Mon Apr 11 2022 17:39:47 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 17:42:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/6
info [Mon Apr 11 2022 17:42:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:42:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:42:43 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
info [Mon Apr 11 2022 17:42:43 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 17:42:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:42:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:42:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:42:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:42:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:44:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:44:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:44:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:44:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:44:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:44:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:44:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:44:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:44:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:44:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null
    }
  ],
  message: ''
}


info [Mon Apr 11 2022 17:45:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 17:45:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:10 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: 'test' }
error [Mon Apr 11 2022 17:45:11 GMT+0800 (China Standard Time)]  Error occured:  Password is not correct!
info [Mon Apr 11 2022 17:45:11 GMT+0800 (China Standard Time)]  { message: 'Password is not correct!' }
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY3MDMxMiwiZXhwIjoxNjQ5NjczOTEyfQ.ykupfGLFas-YgAin_KdNsx42obN7K61Bn52P5t-V8kI',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:45:12 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:45:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:45:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:45:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:45:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:45:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:45:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:45:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:45:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:45:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:45:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:45:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null
    }
  ],
  message: ''
}


info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:51:16 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:52:01 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:45:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like`, `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs`, `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `comments`.`createdAt` is NULL'
}
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Mon Apr 11 2022 17:52:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:54:10 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:57:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:58:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:58:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:54 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:58:55 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:58:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 17:58:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:58:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 17:58:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:58:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:58:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:58:59 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:03 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:59:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:59:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  Error occured:  You thumb up it before. Can't do it again!
info [Mon Apr 11 2022 17:59:27 GMT+0800 (China Standard Time)]  { message: "You thumb up it before. Can't do it again!" }
info [Mon Apr 11 2022 17:59:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:59:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:59:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/6
info [Mon Apr 11 2022 17:59:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:43 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 17:59:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:59:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 17:59:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 17:59:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/6
info [Mon Apr 11 2022 17:59:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:55 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 17:59:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 17:59:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 17:59:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 17:59:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 17:59:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:00:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:00:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:00:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:00:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:00:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:01:26 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  TypeError: query.get is not a function
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:54:28)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async readBlog (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:91:23)
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Mon Apr 11 2022 18:01:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}


info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:02:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'blogs.id = comments.mainBlogId or `blogs`.`id` = `comments`.`mainBlogId` WHER...' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:57:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'blogs.id = comments.mainBlogId or `blogs`.`id` = `comments`.`mainBlogId` WHER...' at line 1",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`mainBlogIdOR` blogs.id = comments.mainBlogId or `blogs`.`id` = `comments`.`mainBlogId` WHERE `comments`.`mainBlogId` = 6 GROUP BY `blogs`.`id`'
}
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Mon Apr 11 2022 18:09:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:12:54 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:13:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:15:51 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readCertainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:78:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like`, `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs`, `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`mainBlogId` OR `blogs`.`id` = `comments`.`mainBlogId` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`mainBlogId` OR `blogs`.`id` = `comments`.`mainBlogId` WHERE `comments`.`mainBlogId` = 6 OR `blogs`.`id` = 6 AND `comments`.`mainBlogId` = 6 OR `blogs`.`id` = 6 GROUP BY `blogs`.`id`, `blogs`.`id`'
}
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Mon Apr 11 2022 18:16:28 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:17:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:18:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 0
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:19:02 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/13
info [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 18:19:10 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:19:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:19:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:19:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:19:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/13
info [Mon Apr 11 2022 18:19:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:29 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:19:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:21:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:21:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:06 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:21:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:21:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:21:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:21:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:21:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:21:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:21:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:21:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:21:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:21:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:21:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:21:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 14,
    username: 'Test1',
    email: 'test1@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:23:17 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:23:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:23:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:23:24 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:23:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:23:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:23:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:23:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 18:23:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:44 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }

info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/comment/5
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  BODY: { title: 'Comment2 to Title2', text: 'Comment2 to Title2' }
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:23:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:23:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Mon Apr 11 2022 18:24:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Mon Apr 11 2022 18:24:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:24:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:24:55 GMT+0800 (China Standard Time)]  BODY: { username: 'Test2', email: 'test2@gmail.com', password: '1234' }
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  {
  userId: 15,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTUsImlhdCI6MTY0OTY3MjY5NiwiZXhwIjoxNjQ5Njc2Mjk2fQ.cMG2nFDQXPsHBLmUx-JoCqto8ftEmiS8sXINQYWdnYw',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:24:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 15,
    username: 'Test2',
    email: 'test2@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:24:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:24:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:24:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:24:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:24:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:25:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:25:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:25:06 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 1
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/14
info [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Mon Apr 11 2022 18:25:08 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  Error occured:  You thumb up it before. Can't do it again!
info [Mon Apr 11 2022 18:25:11 GMT+0800 (China Standard Time)]  { message: "You thumb up it before. Can't do it again!" }
info [Mon Apr 11 2022 18:25:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:25:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:25:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 1
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:25:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/14
info [Mon Apr 11 2022 18:25:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:29 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 18:25:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/14
info [Mon Apr 11 2022 18:25:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:25:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:25:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:25:35 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 18:27:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Mon Apr 11 2022 18:27:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:18 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:27:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:27:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:27:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:27:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/8
info [Mon Apr 11 2022 18:27:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      mainBlogId: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:27:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/8
info [Mon Apr 11 2022 18:27:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:27:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:42 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 18:27:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:27:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 15,
    username: 'Test2',
    email: 'test2@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 15,
    username: 'Test2',
    email: 'test2@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:27:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:27:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/8
info [Mon Apr 11 2022 18:27:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      mainBlogId: null,
      like: 0
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:27:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/8
info [Mon Apr 11 2022 18:27:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:27:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:27:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:27:57 GMT+0800 (China Standard Time)]  { message: '' }
info [Mon Apr 11 2022 18:28:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:28:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:28:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:28:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:28:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:35:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:35:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:35:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:35:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:35:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:41:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:41:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:41:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:41:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:41:48 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:42:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:42:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:42:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:42:02 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 18:42:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:42:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:42:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:42:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:42:10 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:43:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:43:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:43:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:43:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:43:16 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:44:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 18:44:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:44:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:44:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:44:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 18:44:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 18:44:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:44:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:44:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:44:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 18:44:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Mon Apr 11 2022 18:44:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 18:44:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 18:44:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 18:44:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY3Njk5OCwiZXhwIjoxNjQ5NjgwNTk4fQ.niwXD0KWtgCcuyCRXSqloFSV85GN8zixTp8wxFj9fEY',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:36:38 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 19:37:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:37:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:37:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:37:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:37:26 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 19:38:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Mon Apr 11 2022 19:38:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:38:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:38:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:38:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Mon Apr 11 2022 19:44:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:44:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:44:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:44:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:44:48 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 19:45:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:45:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:45:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:45:08 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 19:48:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:48:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:48:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:48:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:48:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 19:48:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:48:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:48:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:48:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:48:57 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 19:49:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 19:49:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 19:49:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 19:49:47 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 19:49:47 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:05:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:05:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:05:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:05:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:05:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:07:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:07:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:07:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:07:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:07:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:08:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:08:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:08:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:08:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:08:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:08:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:08:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:08:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:08:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:08:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:10:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:10:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:10:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:10:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:10:38 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:11:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:11:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:11:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:11:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:11:42 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:12:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:12:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:12:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:12:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:12:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:13:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:13:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:13:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:13:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:14:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:14:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:14:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:14:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:15:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:15:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:15:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:15:15 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 20:15:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:15:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:15:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:15:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:15:38 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:25:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:25:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:25:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:25:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:25:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:26:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:26:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:26:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:26:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:26:23 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:26:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:26:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:26:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:26:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:26:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:34:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:34:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:34:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:34:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:34:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:34:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:34:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:34:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:34:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:34:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}






info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY4MTM1MywiZXhwIjoxNjQ5Njg0OTUzfQ.CjGogvANqY7jcuf8RZJPh_wH55kgydo2ft-EIWNzD9k',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:49:13 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:49:27 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User',
  email: 'test@gmail.com',
  oldPassword: '',
  password: ''
}
info [Mon Apr 11 2022 20:53:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:53:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:53:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:53:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:53:06 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Mon Apr 11 2022 20:54:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:54:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:54:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:54:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:56:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:56:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:56:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:56:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:56:11 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:56:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:56:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:56:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:56:16 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 20:57:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:57:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:57:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:57:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:57:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:57:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:57:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:57:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:57:26 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 20:57:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:57:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:57:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:57:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:58:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:58:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:58:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:58:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:58:59 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 20:59:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 20:59:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:59:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:59:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:59:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 20:59:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 20:59:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 20:59:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 20:59:55 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 21:00:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 21:00:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 21:00:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 21:00:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 21:00:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 21:00:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 21:00:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 21:00:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 21:00:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 21:00:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 21:00:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 21:00:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 21:00:30 GMT+0800 (China Standard Time)]  BODY: {}


info [Mon Apr 11 2022 21:03:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 21:03:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 21:03:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 21:03:34 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 21:04:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 21:04:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 21:04:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 21:04:09 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY4NTgyNSwiZXhwIjoxNjQ5Njg5NDI1fQ.mO7x_Czr7RL_anzHiVG49RmppsEkqRPgR5qtehgxpvI',
  expirationTime: 3600,
  message: ''
}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:03:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 22:04:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 22:04:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:04:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:04:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:04:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 22:07:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image

info [Mon Apr 11 2022 22:09:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image

info [Mon Apr 11 2022 22:10:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:10:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:10:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:10:12 GMT+0800 (China Standard Time)]  BODY: {}


info [Mon Apr 11 2022 22:11:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:11:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:11:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:11:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:12:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:12:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:12:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:12:37 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  {
  imageUrls: [ '5327b3ae-1d97-4bce-91ca-df57335586e9-screenshot.png' ],
  message: ''
}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:13:07 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User',
  email: 'test@gmail.com',
  oldPassword: '',
  password: ''
}
info [Mon Apr 11 2022 22:15:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 22:15:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:15:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:15:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:15:00 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}





info [Mon Apr 11 2022 22:23:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:23:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:23:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:23:12 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User5',
  email: 'test@gmail.com',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Mon Apr 11 2022 22:23:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 22:23:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:23:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:23:37 GMT+0800 (China Standard Time)]  BODY: {}

info [Mon Apr 11 2022 22:34:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/me
info [Mon Apr 11 2022 22:34:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:34:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:34:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  BODY: {}
error [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  TypeError: DATABASE.get_connection is not a function
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:15:45)
    at me (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:16:42)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:19:9)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
info [Mon Apr 11 2022 22:35:39 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }


info [Mon Apr 11 2022 22:36:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Mon Apr 11 2022 22:36:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:36:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:36:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:36:34 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  {
  imageUrls: [ '0fbd9451-7187-4963-b1d3-2b34c5719c2a-screenshot.png' ],
  message: ''
}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User5',
  oldPassword: '',
  password: '',
  photoUrl: '0fbd9451-7187-4963-b1d3-2b34c5719c2a-screenshot.png'
}
error [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Mon Apr 11 2022 22:36:48 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }
info [Mon Apr 11 2022 22:37:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Mon Apr 11 2022 22:37:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:37:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:37:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:37:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  {
  imageUrls: [ 'e351c434-a524-45af-a01c-7fbf2c2453bb-screenshot-(1).png' ],
  message: ''
}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User5',
  oldPassword: '',
  password: '',
  photoUrl: 'e351c434-a524-45af-a01c-7fbf2c2453bb-screenshot-(1).png'
}
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      "`id` = `username` = 'Test User5', `photoUrl` = 'e351c434-a524-45af-a01c-7fbf2c2453bb-screenshot-(1).png'"
    ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [
      'SELECT `id`, `username`, `email`, `photoUrl` FROM `users` WHERE `id` = 13'
    ],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 7,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 1082,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 11,
              [Symbol(triggerId)]: 1
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 478,
              scrambleBuff1: <Buffer 50 5d 64 60 33 7b 37 3e>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 6f 38 67 7e 65 5e 2a 54 47 48 71 24>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 01 00 00 01 04 2d 00 00 02 03 64 65 66 09 74 65 73 74 2d 62 6c 6f 67 05 75 73 65 72 73 05 75 73 65 72 73 02 69 64 02 69 64 0c 3f 00 14 00 00 00 08 03 ... 232 more bytes>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 282,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 9,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 478,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 7,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 1082,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 11,
          [Symbol(triggerId)]: 1
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 478,
          scrambleBuff1: <Buffer 50 5d 64 60 33 7b 37 3e>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 6f 38 67 7e 65 5e 2a 54 47 48 71 24>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 01 00 00 01 04 2d 00 00 02 03 64 65 66 09 74 65 73 74 2d 62 6c 6f 67 05 75 73 65 72 73 05 75 73 65 72 73 02 69 64 02 69 64 0c 3f 00 14 00 00 00 08 03 ... 232 more bytes>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 282,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 9,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 478,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Mon Apr 11 2022 22:37:56 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  {
  imageUrls: [
    './uploads/da2fdb1c-0f35-4a27-bc92-1b466dc519b0-screenshot-(1).png'
  ],
  message: ''
}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User5',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/da2fdb1c-0f35-4a27-bc92-1b466dc519b0-screenshot-(1).png'
}
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      "`id` = `username` = 'Test User5', `photoUrl` = './uploads/da2fdb1c-0f35-4a27-bc92-1b466dc519b0-screenshot-(1).png'"
    ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 7,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 937,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 11,
              [Symbol(triggerId)]: 1
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 479,
              scrambleBuff1: <Buffer 70 2a 7a 4f 5a 54 77 7c>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 29 51 40 2c 59 5c 41 72 39 64 6e 7c>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 479,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 7,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 937,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 11,
          [Symbol(triggerId)]: 1
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 479,
          scrambleBuff1: <Buffer 70 2a 7a 4f 5a 54 77 7c>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 29 51 40 2c 59 5c 41 72 39 64 6e 7c>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 479,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Mon Apr 11 2022 22:40:52 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }


info [Mon Apr 11 2022 22:42:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Mon Apr 11 2022 22:42:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:42:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:42:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Mon Apr 11 2022 22:42:08 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User5', oldPassword: '', password: '', photoUrl: '' }
error [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  TypeError: DATABASE.where is not a function
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:42:31)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:44)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:19:9)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
info [Mon Apr 11 2022 22:42:13 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User5', oldPassword: '', password: '', photoUrl: '' }
error [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  TypeError: DATABASE.where is not a function
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:42:31)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:44)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:19:9)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
info [Mon Apr 11 2022 22:44:12 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }



info [Mon Apr 11 2022 22:46:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Mon Apr 11 2022 22:46:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Mon Apr 11 2022 22:46:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Mon Apr 11 2022 22:46:25 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User5', oldPassword: '', password: '', photoUrl: '' }
info [Mon Apr 11 2022 22:46:26 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User5', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 2311,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 483,
              scrambleBuff1: <Buffer 69 6d 66 39 29 5e 22 2b>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 4e 2c 30 49 60 29 47 6b 64 34 76 78>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 483,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 2311,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 483,
              scrambleBuff1: <Buffer 69 6d 66 39 29 5e 22 2b>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 4e 2c 30 49 60 29 47 6b 64 34 76 78>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 483,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [ [Circular *3] ],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 2311,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [ [Circular *3] ],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 483,
          scrambleBuff1: <Buffer 69 6d 66 39 29 5e 22 2b>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 4e 2c 30 49 60 29 47 6b 64 34 76 78>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 483,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [ [Circular *3] ],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Mon Apr 11 2022 22:46:26 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Mon Apr 11 2022 22:46:26 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Mon Apr 11 2022 22:46:26 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 00:17:34 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  TypeError: Cannot read property 'select' of undefined
    at Object.readUsersPassword (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:29:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:21:24)
info [Tue Apr 12 2022 00:19:59 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  TypeError: dbConnector.select is not a function
    at Object.readUsersPassword (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:29:14)
    at signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:21:42)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)
info [Tue Apr 12 2022 00:23:48 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }


info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  TypeError: dbConnector.select is not a function
    at Object.readUsersPassword (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:30:14)
    at signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:21:42)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)
info [Tue Apr 12 2022 00:26:30 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
error [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  TypeError: dbConnector.select is not a function
    at Object.readUsersPassword (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:30:14)
    at signin (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:21:42)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:275:10)
    at Function.handle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:174:3)
info [Tue Apr 12 2022 00:27:46 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY5NDUzMCwiZXhwIjoxNjQ5Njk4MTMwfQ.codumc1w-aeKy8j0ZgOJSBzapYw6SkhlZZ1UQ8EWNpg',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:28:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 00:29:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 00:29:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 00:29:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/14
info [Tue Apr 12 2022 00:29:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:34 GMT+0800 (China Standard Time)]  { message: '' }
info [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 00:29:35 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 00:29:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:41 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 00:29:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:42 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 00:29:43 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:45 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/6
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    },
    RowDataPacket {
      id: 13,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 6,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:29:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/8
info [Tue Apr 12 2022 00:29:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:29:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      mainBlogId: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/8
info [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 00:29:58 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 00:30:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:09 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:09 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:13 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:15 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:17 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:20 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 00:30:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 00:30:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:30:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:30:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:30:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}




info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 15784,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 487,
              scrambleBuff1: <Buffer 6b 45 56 5e 59 22 3a 3d>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 64 62 3e 4f 51 28 72 29 70 7c 3f 64>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 487,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 15784,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 487,
              scrambleBuff1: <Buffer 6b 45 56 5e 59 22 3a 3d>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 64 62 3e 4f 51 28 72 29 70 7c 3f 64>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 487,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [ [Circular *3] ],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 15784,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [ [Circular *3] ],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 487,
          scrambleBuff1: <Buffer 6b 45 56 5e 59 22 3a 3d>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 64 62 3e 4f 51 28 72 29 70 7c 3f 64>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 487,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [ [Circular *3] ],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 00:45:13 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY5NTYwMCwiZXhwIjoxNjQ5Njk5MjAwfQ.deSsAn5X1TjzgiAIhUgf_J1UR5G0X_ROh8WBUeHBpSQ',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 00:46:40 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}


info [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 01:00:19 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTY5NjQ5NiwiZXhwIjoxNjQ5NzAwMDk2fQ.KwHe-t7x24sISyPkGMX1TVBqscws5qQ5oETiAYFD1Vc',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:01:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 01:01:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 01:01:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:01:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:01:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:01:38 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [
      'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL GROUP BY `blogs`.`id`'
    ],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 56,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 344861,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 60,
              [Symbol(triggerId)]: 53
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 489,
              scrambleBuff1: <Buffer 3d 55 74 69 30 54 34 47>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 47 6e 73 78 22 3b 41 77 53 79 28 56>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 01 00 00 01 06 2d 00 00 02 03 64 65 66 09 74 65 73 74 2d 62 6c 6f 67 05 62 6c 6f 67 73 05 62 6c 6f 67 73 02 69 64 02 69 64 0c 3f 00 14 00 00 00 08 01 ... 617 more bytes>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 667,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 14,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 489,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 56,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 344861,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 60,
              [Symbol(triggerId)]: 53
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 489,
              scrambleBuff1: <Buffer 3d 55 74 69 30 54 34 47>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 47 6e 73 78 22 3b 41 77 53 79 28 56>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 01 00 00 01 06 2d 00 00 02 03 64 65 66 09 74 65 73 74 2d 62 6c 6f 67 05 62 6c 6f 67 73 05 62 6c 6f 67 73 02 69 64 02 69 64 0c 3f 00 14 00 00 00 08 01 ... 617 more bytes>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 667,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 14,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 489,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [ [Circular *3] ],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 56,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 344861,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 60,
          [Symbol(triggerId)]: 53
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [ [Circular *3] ],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 489,
          scrambleBuff1: <Buffer 3d 55 74 69 30 54 34 47>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 47 6e 73 78 22 3b 41 77 53 79 28 56>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 01 00 00 01 06 2d 00 00 02 03 64 65 66 09 74 65 73 74 2d 62 6c 6f 67 05 62 6c 6f 67 73 05 62 6c 6f 67 73 02 69 64 02 69 64 0c 3f 00 14 00 00 00 08 01 ... 617 more bytes>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 667,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 14,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 489,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [ [Circular *3] ],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:01:59 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [Function (anonymous)]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 6393,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 490,
              scrambleBuff1: <Buffer 6e 24 61 3f 56 74 66 21>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 6e 28 79 4e 59 52 70 5d 62 53 5b 4c>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 490,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [Function (anonymous)]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 6393,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 490,
          scrambleBuff1: <Buffer 6e 24 61 3f 56 74 66 21>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 6e 28 79 4e 59 52 70 5d 62 53 5b 4c>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 490,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:02:53 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:03:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:03:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:03:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:03:43 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:03:43 GMT+0800 (China Standard Time)]  { user: {}, message: '' }

info [Tue Apr 12 2022 01:04:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:04:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:04:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:04:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:04:13 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Tue Apr 12 2022 01:07:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:07:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:07:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:07:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:07:33 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 01:07:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:07:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:07:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:07:41 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:07:41 GMT+0800 (China Standard Time)]  { user: {}, message: '' }
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'users'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:19:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'users'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT `id`, `username`, `email`, `photoUrl` FROM `users`, `users` WHERE `id` = `username` = 'Test User22', `photoUrl` = '' AND `id` = 13"
}
info [Tue Apr 12 2022 01:07:50 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 01:09:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:09:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:09:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:09:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:09:17 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 15990,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 496,
              scrambleBuff1: <Buffer 51 79 31 27 6d 73 78 22>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 3b 42 7a 5f 4e 49 63 39 2e 7b 45 24>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 496,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 15990,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 496,
          scrambleBuff1: <Buffer 51 79 31 27 6d 73 78 22>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 3b 42 7a 5f 4e 49 63 39 2e 7b 45 24>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 496,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:09:55 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:11:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:11:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:11:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:11:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:11:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
error [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  Error: update(): You must set some field value pairs to update using the set method or via an object passed to the second parameter of the update method!
    at Single._update (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1273:18)
    at Single.update (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:152:26)
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:44:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:26)
info [Tue Apr 12 2022 01:11:22 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
error [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  Error: update(): You must set some field value pairs to update using the set method or via an object passed to the second parameter of the update method!
    at Single._update (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1273:18)
    at Single.update (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:152:26)
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:43:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:26)
info [Tue Apr 12 2022 01:13:46 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `photoUrl` = '' AND `id` = 13' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:19:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' `photoUrl` = '' AND `id` = 13' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT `id`, `username`, `email`, `photoUrl` FROM `users` WHERE `id` = `username` = 'Test User22', `photoUrl` = '' AND `id` = 13"
}
info [Tue Apr 12 2022 01:53:11 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 01:53:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 01:53:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:53:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:53:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 01:53:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: null
  },
  message: ''
}

info [Tue Apr 12 2022 01:54:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:54:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:54:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:54:40 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:54:41 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 7822,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 499,
              scrambleBuff1: <Buffer 72 7c 39 42 23 25 31 63>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 22 7c 6c 2c 32 57 3f 72 43 38 2f 23>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 499,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 7822,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 499,
          scrambleBuff1: <Buffer 72 7c 39 42 23 25 31 63>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 22 7c 6c 2c 32 57 3f 72 43 38 2f 23>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 499,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:54:41 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:54:41 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:54:41 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ "`id` = `username` = 'Test User22', `photoUrl` = ''" ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 2993,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 500,
              scrambleBuff1: <Buffer 5e 3d 52 67 30 55 3e 76>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 59 3a 54 78 23 3f 55 6f 4d 70 70 60>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 500,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 2993,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 500,
          scrambleBuff1: <Buffer 5e 3d 52 67 30 55 3e 76>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 59 3a 54 78 23 3f 55 6f 4d 70 70 60>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 500,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:55:01 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      "`id` = `username` = 'Test User22', `photoUrl` = ''",
      "AND `id` = `username` = 'Test User22', `photoUrl` = ''"
    ],
    where_in_array: [],
    from_array: [ '`from`', '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 7361,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 501,
              scrambleBuff1: <Buffer 65 71 2b 21 60 42 69 6b>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 5d 71 3e 24 36 23 49 2a 32 5c 5a 30>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 501,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 7361,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 501,
          scrambleBuff1: <Buffer 65 71 2b 21 60 42 69 6b>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 5d 71 3e 24 36 23 49 2a 32 5c 5a 30>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 501,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:56:54 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      '`id` = [object Object]',
      "AND `id` = `username` = 'Test User22', `photoUrl` = ''"
    ],
    where_in_array: [],
    from_array: [ '`from`', '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 3711,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 502,
              scrambleBuff1: <Buffer 67 62 37 2b 6f 6e 5a 58>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 2d 74 25 57 68 27 24 7c 68 76 38 53>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 502,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3711,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 502,
          scrambleBuff1: <Buffer 67 62 37 2b 6f 6e 5a 58>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 2d 74 25 57 68 27 24 7c 68 76 38 53>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 502,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:57:58 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      '`id` = [object Object]',
      "AND `id` = `username` = 'Test User22', `photoUrl` = ''"
    ],
    where_in_array: [],
    from_array: [ '`from`', '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 4447,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 503,
              scrambleBuff1: <Buffer 5c 33 29 72 27 65 48 79>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 48 3b 31 21 52 57 42 23 27 38 25 50>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 503,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 4447,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 503,
          scrambleBuff1: <Buffer 5c 33 29 72 27 65 48 79>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 48 3b 31 21 52 57 42 23 27 38 25 50>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 503,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:58:44 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      '`id` = [object Object]',
      "AND `id` = `username` = 'Test User22', `photoUrl` = ''"
    ],
    where_in_array: [],
    from_array: [ '`from`', '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 3483,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 504,
              scrambleBuff1: <Buffer 7d 32 7d 41 6a 71 7b 39>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 45 30 60 72 3e 7c 75 58 3a 56 24 4c>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 504,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3483,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 504,
          scrambleBuff1: <Buffer 7d 32 7d 41 6a 71 7b 39>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 45 30 60 72 3e 7c 75 58 3a 56 24 4c>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 504,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:58:55 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [
      '`id` = [object Object]',
      "AND `id` = `username` = 'Test User22', `photoUrl` = ''"
    ],
    where_in_array: [],
    from_array: [ '`from`', '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 3651,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 505,
              scrambleBuff1: <Buffer 28 5b 72 4a 5c 6f 3a 6f>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 44 45 6e 79 36 40 7c 70 40 2c 5c 6a>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 505,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3651,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 505,
          scrambleBuff1: <Buffer 28 5b 72 4a 5c 6f 3a 6f>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 44 45 6e 79 36 40 7c 70 40 2c 5c 6a>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 505,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 01:59:10 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
error [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  ReferenceError: id is not defined
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:55)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at checkAuth (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\checkAuth.js:19:9)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at next (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:137:13)
    at Route.dispatch (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\route.js:112:3)
    at Layer.handle [as handle_request] (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\layer.js:95:5)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:281:22
    at Function.process_params (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\router\index.js:341:12)
info [Tue Apr 12 2022 01:59:26 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
error [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  Error: set(): Invalid value provided! (provided: [object Object] (type: object)
    at Single.set (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1086:22)
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:44:18)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:26)
info [Tue Apr 12 2022 01:59:48 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
error [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  Error: set(): Invalid value provided! (provided: [object Object] (type: object)
    at Single.set (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1086:22)
    at Object.updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:40:62)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:59:26)
info [Tue Apr 12 2022 02:00:30 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ '`id` = 13' ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [ { '`username`': "'Test User22'" }, { '`photoUrl`': "''" } ],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 2728,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 508,
              scrambleBuff1: <Buffer 3a 32 28 73 2e 27 76 41>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 7e 7a 69 22 66 5f 2c 59 5b 3d 60 4d>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 508,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 2728,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 508,
          scrambleBuff1: <Buffer 3a 32 28 73 2e 27 76 41>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 7e 7a 69 22 66 5f 2c 59 5b 3d 60 4d>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 508,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 02:00:49 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  {
  user: Single {
    reserved_identifiers: [ '*' ],
    where_array: [ '`id` = 13' ],
    where_in_array: [],
    from_array: [ '`users`' ],
    join_array: [],
    select_array: [],
    set_array: [ { '`username`': "'Test User22'" }, { '`photoUrl`': "''" } ],
    order_by_array: [],
    group_by_array: [],
    having_array: [],
    limit_to: [],
    offset_val: [],
    join_clause: [],
    last_query_string: [],
    distinct_clause: [],
    aliased_tables: [],
    returning_ids: [],
    rand_word: 'RAND()',
    escape_char: '`',
    condition_rgx: /([\[\]\w\."\s-]+)(\s*[^\"\[`'\w-]+\s*)(.+)/i,
    multi_condition_rgx: /\s(OR|AND)\s/i,
    _original_settings: {
      host: 'localhost',
      database: 'test-blog',
      user: 'root',
      password: ''
    },
    _connection_settings: {
      host: 'localhost',
      user: 'root',
      password: '',
      database: 'test-blog'
    },
    debugging: false,
    pool: <ref *1> Pool {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      config: PoolConfig {
        acquireTimeout: 10000,
        connectionConfig: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: [Circular *1],
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631
        },
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
      },
      _acquiringConnections: [],
      _allConnections: [
        <ref *3> PoolConnection {
          _events: [Object: null prototype] {
            end: [Function: _removeFromPool],
            error: [ [Function (anonymous)], [Function (anonymous)] ]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          config: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631,
            protocol41: true
          },
          _socket: <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: 'localhost',
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: true,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _events: [Object: null prototype] {
              end: [
                [Function: onReadableStreamEnd],
                [Function (anonymous)]
              ],
              data: [Function (anonymous)],
              error: [Function: bound ],
              connect: [Function: bound ]
            },
            _eventsCount: 4,
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 0,
              writing: false,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: null,
              writelen: 0,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 0,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              writable: true
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 0,
            [Symbol(async_id_symbol)]: 30,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(kSetNoDelay)]: false,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: -1,
              _idlePrev: null,
              _idleNext: null,
              _idleStart: 3588,
              _onTimeout: null,
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: true,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 34,
              [Symbol(triggerId)]: 27
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          },
          _protocol: Protocol {
            _events: [Object: null prototype] {
              data: [Function (anonymous)],
              end: [ [Function (anonymous)], [Function: bound ] ],
              handshake: [Function: bound _handleProtocolHandshake],
              initialize: [Function: bound _handleProtocolInitialize],
              unhandledError: [Function: bound ],
              drain: [Function: bound ],
              enqueue: [Function: bound _handleProtocolEnqueue]
            },
            _eventsCount: 7,
            _maxListeners: undefined,
            readable: true,
            writable: true,
            _config: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631,
              protocol41: true
            },
            _connection: [Circular *3],
            _callback: null,
            _fatalError: null,
            _quitSequence: null,
            _handshake: true,
            _handshaked: true,
            _ended: false,
            _destroyed: false,
            _queue: [],
            _handshakeInitializationPacket: HandshakeInitializationPacket {
              protocolVersion: 10,
              serverVersion: '5.5.5-10.4.19-MariaDB',
              threadId: 509,
              scrambleBuff1: <Buffer 65 2d 4b 71 78 29 60 2b>,
              filler1: <Buffer 00>,
              serverCapabilities1: 63486,
              serverLanguage: 45,
              serverStatus: 2,
              serverCapabilities2: 33279,
              scrambleLength: 21,
              filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
              scrambleBuff2: <Buffer 52 3a 6b 30 47 58 63 67 5c 76 5f 59>,
              filler3: <Buffer 00>,
              pluginData: 'mysql_native_password',
              protocol41: true
            },
            _parser: Parser {
              _supportBigNumbers: false,
              _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
              _nextBuffers: BufferList { bufs: [], size: 0 },
              _longPacketBuffers: BufferList { bufs: [], size: 0 },
              _offset: 11,
              _packetEnd: null,
              _packetHeader: null,
              _packetOffset: null,
              _onError: [Function: bound handleParserError],
              _onPacket: [Function: bound ],
              _nextPacketNumber: 3,
              _encoding: 'utf-8',
              _paused: false
            },
            [Symbol(kCapture)]: false
          },
          _connectCalled: true,
          state: 'authenticated',
          threadId: 509,
          _pool: [Circular *1],
          [Symbol(kCapture)]: false
        }
      ],
      _freeConnections: [],
      _connectionQueue: [],
      _closed: false,
      [Symbol(kCapture)]: false
    },
    _connection: <ref *3> PoolConnection {
      _events: [Object: null prototype] {
        end: [Function: _removeFromPool],
        error: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      config: ConnectionConfig {
        host: 'localhost',
        port: 3306,
        localAddress: undefined,
        socketPath: undefined,
        user: 'root',
        password: undefined,
        database: 'test-blog',
        connectTimeout: 10000,
        insecureAuth: false,
        supportBigNumbers: false,
        bigNumberStrings: false,
        dateStrings: false,
        debug: undefined,
        trace: true,
        stringifyObjects: false,
        timezone: 'local',
        flags: '',
        queryFormat: undefined,
        pool: <ref *1> Pool {
          _events: [Object: null prototype] {},
          _eventsCount: 0,
          _maxListeners: undefined,
          config: PoolConfig {
            acquireTimeout: 10000,
            connectionConfig: ConnectionConfig {
              host: 'localhost',
              port: 3306,
              localAddress: undefined,
              socketPath: undefined,
              user: 'root',
              password: undefined,
              database: 'test-blog',
              connectTimeout: 10000,
              insecureAuth: false,
              supportBigNumbers: false,
              bigNumberStrings: false,
              dateStrings: false,
              debug: undefined,
              trace: true,
              stringifyObjects: false,
              timezone: 'local',
              flags: '',
              queryFormat: undefined,
              pool: [Circular *1],
              ssl: false,
              localInfile: true,
              multipleStatements: false,
              typeCast: true,
              maxPacketSize: 0,
              charsetNumber: 33,
              clientFlags: 455631
            },
            waitForConnections: true,
            connectionLimit: 10,
            queueLimit: 0
          },
          _acquiringConnections: [],
          _allConnections: [ [Circular *3] ],
          _freeConnections: [],
          _connectionQueue: [],
          _closed: false,
          [Symbol(kCapture)]: false
        },
        ssl: false,
        localInfile: true,
        multipleStatements: false,
        typeCast: true,
        maxPacketSize: 0,
        charsetNumber: 33,
        clientFlags: 455631,
        protocol41: true
      },
      _socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'localhost',
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [ [Function: onReadableStreamEnd], [Function (anonymous)] ],
          data: [Function (anonymous)],
          error: [Function: bound ],
          connect: [Function: bound ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          writable: true
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 0,
        [Symbol(async_id_symbol)]: 30,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3588,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 34,
          [Symbol(triggerId)]: 27
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _protocol: Protocol {
        _events: [Object: null prototype] {
          data: [Function (anonymous)],
          end: [ [Function (anonymous)], [Function: bound ] ],
          handshake: [Function: bound _handleProtocolHandshake],
          initialize: [Function: bound _handleProtocolInitialize],
          unhandledError: [Function: bound ],
          drain: [Function: bound ],
          enqueue: [Function: bound _handleProtocolEnqueue]
        },
        _eventsCount: 7,
        _maxListeners: undefined,
        readable: true,
        writable: true,
        _config: ConnectionConfig {
          host: 'localhost',
          port: 3306,
          localAddress: undefined,
          socketPath: undefined,
          user: 'root',
          password: undefined,
          database: 'test-blog',
          connectTimeout: 10000,
          insecureAuth: false,
          supportBigNumbers: false,
          bigNumberStrings: false,
          dateStrings: false,
          debug: undefined,
          trace: true,
          stringifyObjects: false,
          timezone: 'local',
          flags: '',
          queryFormat: undefined,
          pool: <ref *1> Pool {
            _events: [Object: null prototype] {},
            _eventsCount: 0,
            _maxListeners: undefined,
            config: PoolConfig {
              acquireTimeout: 10000,
              connectionConfig: ConnectionConfig {
                host: 'localhost',
                port: 3306,
                localAddress: undefined,
                socketPath: undefined,
                user: 'root',
                password: undefined,
                database: 'test-blog',
                connectTimeout: 10000,
                insecureAuth: false,
                supportBigNumbers: false,
                bigNumberStrings: false,
                dateStrings: false,
                debug: undefined,
                trace: true,
                stringifyObjects: false,
                timezone: 'local',
                flags: '',
                queryFormat: undefined,
                pool: [Circular *1],
                ssl: false,
                localInfile: true,
                multipleStatements: false,
                typeCast: true,
                maxPacketSize: 0,
                charsetNumber: 33,
                clientFlags: 455631
              },
              waitForConnections: true,
              connectionLimit: 10,
              queueLimit: 0
            },
            _acquiringConnections: [],
            _allConnections: [ [Circular *3] ],
            _freeConnections: [],
            _connectionQueue: [],
            _closed: false,
            [Symbol(kCapture)]: false
          },
          ssl: false,
          localInfile: true,
          multipleStatements: false,
          typeCast: true,
          maxPacketSize: 0,
          charsetNumber: 33,
          clientFlags: 455631,
          protocol41: true
        },
        _connection: [Circular *3],
        _callback: null,
        _fatalError: null,
        _quitSequence: null,
        _handshake: true,
        _handshaked: true,
        _ended: false,
        _destroyed: false,
        _queue: [],
        _handshakeInitializationPacket: HandshakeInitializationPacket {
          protocolVersion: 10,
          serverVersion: '5.5.5-10.4.19-MariaDB',
          threadId: 509,
          scrambleBuff1: <Buffer 65 2d 4b 71 78 29 60 2b>,
          filler1: <Buffer 00>,
          serverCapabilities1: 63486,
          serverLanguage: 45,
          serverStatus: 2,
          serverCapabilities2: 33279,
          scrambleLength: 21,
          filler2: <Buffer 00 00 00 00 00 00 07 00 00 00>,
          scrambleBuff2: <Buffer 52 3a 6b 30 47 58 63 67 5c 76 5f 59>,
          filler3: <Buffer 00>,
          pluginData: 'mysql_native_password',
          protocol41: true
        },
        _parser: Parser {
          _supportBigNumbers: false,
          _buffer: <Buffer 07 00 00 02 00 00 00 02 40 00 00>,
          _nextBuffers: BufferList { bufs: [], size: 0 },
          _longPacketBuffers: BufferList { bufs: [], size: 0 },
          _offset: 11,
          _packetEnd: null,
          _packetHeader: null,
          _packetOffset: null,
          _onError: [Function: bound handleParserError],
          _onPacket: [Function: bound ],
          _nextPacketNumber: 3,
          _encoding: 'utf-8',
          _paused: false
        },
        [Symbol(kCapture)]: false
      },
      _connectCalled: true,
      state: 'authenticated',
      threadId: 509,
      _pool: <ref *1> Pool {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: PoolConfig {
          acquireTimeout: 10000,
          connectionConfig: ConnectionConfig {
            host: 'localhost',
            port: 3306,
            localAddress: undefined,
            socketPath: undefined,
            user: 'root',
            password: undefined,
            database: 'test-blog',
            connectTimeout: 10000,
            insecureAuth: false,
            supportBigNumbers: false,
            bigNumberStrings: false,
            dateStrings: false,
            debug: undefined,
            trace: true,
            stringifyObjects: false,
            timezone: 'local',
            flags: '',
            queryFormat: undefined,
            pool: [Circular *1],
            ssl: false,
            localInfile: true,
            multipleStatements: false,
            typeCast: true,
            maxPacketSize: 0,
            charsetNumber: 33,
            clientFlags: 455631
          },
          waitForConnections: true,
          connectionLimit: 10,
          queueLimit: 0
        },
        _acquiringConnections: [],
        _allConnections: [ [Circular *3] ],
        _freeConnections: [],
        _connectionQueue: [],
        _closed: false,
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    }
  },
  message: ''
}
error [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  TypeError: Converting circular structure to JSON
    --> starting at object with constructor 'Pool'
    |     property 'config' -> object with constructor 'PoolConfig'
    |     property 'connectionConfig' -> object with constructor 'ConnectionConfig'
    --- property 'pool' closes the circle
    at JSON.stringify (<anonymous>)
    at stringify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:1128:12)
    at ServerResponse.json (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\express\lib\response.js:260:14)
    at Response (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\utils\response.js:18:25)
    at updateUser (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\users.controller.js:64:13)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 02:01:04 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 02:01:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:01:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:01:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:01:25 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 02:01:25 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 02:01:38 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTcwMDEyMSwiZXhwIjoxNjQ5NzAzNzIxfQ.OKxd0QYEcO8DdRQxlBQLt5sBdgrA1UVlQ3rFeADk_jA',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:02:01 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:02:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:02:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:02:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:02:06 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User2', oldPassword: '', password: '', photoUrl: '' }
info [Tue Apr 12 2022 02:02:06 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}

info [Tue Apr 12 2022 02:03:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:03:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:03:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:03:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:03:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User2',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:03:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:03:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:03:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:03:09 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 02:03:09 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}

info [Tue Apr 12 2022 02:04:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:04:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:04:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:04:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:04:06 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:04:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:04:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:04:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:04:10 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User2', oldPassword: '', password: '', photoUrl: '' }
info [Tue Apr 12 2022 02:04:10 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:06:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User2',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:06:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:28 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User2',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:06:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:32 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: ''
}
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:33 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:52 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
}
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:06:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:06:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:06:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:06:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:06:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User22',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User22',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User22',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User22',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:09:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:09:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:09:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:09:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:09:31 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:09:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080//uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:09:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:09:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:09:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:09:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:09:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:09:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:09:45 GMT+0800 (China Standard Time)]  BODY: {}


info [Tue Apr 12 2022 02:11:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:11:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:11:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:11:30 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 02:12:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads
info [Tue Apr 12 2022 02:12:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:12:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:12:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:14:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads
info [Tue Apr 12 2022 02:14:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:14:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:14:12 GMT+0800 (China Standard Time)]  BODY: {}



info [Tue Apr 12 2022 02:16:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads
info [Tue Apr 12 2022 02:16:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:16:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:16:04 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 02:16:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads
info [Tue Apr 12 2022 02:16:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:16:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:16:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:16:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads
info [Tue Apr 12 2022 02:16:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:16:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:16:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:16:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:16:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:16:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:16:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:16:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:16:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:16:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:16:39 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 02:18:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/favicon.ico
info [Tue Apr 12 2022 02:18:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:18:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:18:00 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080//uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:18:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:18:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:18:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:18:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:18:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:18:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:19:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:19:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:19:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:19:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:19:26 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:20:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:20:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:20:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:20:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:20:08 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:21:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:21:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:21:40 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:21:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:21:40 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:22:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:22:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:22:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:22:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:22:13 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:22:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:22:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:22:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:22:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:22:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User22',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User22',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User22',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User22',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:23:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:23:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:23:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/1cf4f619-5efe-4caf-ba66-dc3ffba1fa75-sam-wood.jpg'
  },
  message: ''
}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/43d23ba5-6c5f-4091-bee0-f1840383396b-erin-rull.png' ],
  message: ''
}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/43d23ba5-6c5f-4091-bee0-f1840383396b-erin-rull.png'
}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:23:31 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/43d23ba5-6c5f-4091-bee0-f1840383396b-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:23:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:23:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:23:37 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User22',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User22',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User22',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User22',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User', oldPassword: '', password: '', photoUrl: '' }
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:23:54 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:25:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:25:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  BODY: { username: 'Test User', oldPassword: '', password: '', photoUrl: '' }
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 0  Warnings: 0',
    protocol41: true,
    changedRows: 0,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 0
  },
  message: ''
}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:27:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:27:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: ''
  },
  message: ''
}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:28:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png' ],
  message: ''
}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
}
info [Tue Apr 12 2022 02:28:43 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:28:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:28:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:28:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:28:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:28:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:30:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:31:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:32:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:36:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:29 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User22',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
}
info [Tue Apr 12 2022 02:36:29 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User22',
    email: 'test@gmail.com',
    photoUrl: './uploads/5a1abc50-e047-4668-a971-fb7f16d9c356-erin-rull.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:36:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User22',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User22',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User22',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User22',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png' ],
  message: ''
}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Test User',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:36:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:38:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 02:38:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:13 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:38:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 02:38:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:38:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 02:38:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:38:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:38:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:38:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:38:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:38:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  BODY: { title: 'Title5', text: 'Title5' }
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:44:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  BODY: { title: 'Title6', text: 'Title6' }
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:44:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:47:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:47:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:47:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:47:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:47:13 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:47:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:48:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:48:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:48:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:48:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:48:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:03 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:49:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:49:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:49:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:49:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:49:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:51:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:51:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:03 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:51:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:51:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:51:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:51:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:51:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:51:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:52:12 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:53:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:31 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:53:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=a
info [Tue Apr 12 2022 02:53:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:32 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'a' }
info [Tue Apr 12 2022 02:53:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=as
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'as' }
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=a
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'a' }
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=t
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 't' }
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=ti
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'ti' }
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=t
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 't' }
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:53:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:59:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:59:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:04 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:59:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:04 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:59:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:59:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:14 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:59:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:59:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:59:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:21 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:59:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:59:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=asdf
info [Tue Apr 12 2022 02:59:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:28 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'asdf' }
info [Tue Apr 12 2022 02:59:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 02:59:54 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:00:10 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTcwMzg4NCwiZXhwIjoxNjQ5NzA3NDg0fQ.hx22C4XIbzflR0MrGg7m-LmI3Rur4HqFU0E9_XyNSFk',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:04:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:04:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:04:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:46 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:04:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:04:46 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:04:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=asdf
info [Tue Apr 12 2022 03:04:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:48 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'asdf' }
info [Tue Apr 12 2022 03:04:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:04:48 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Tue Apr 12 2022 03:04:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=title
info [Tue Apr 12 2022 03:04:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: 'title' }
info [Tue Apr 12 2022 03:04:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:04:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=11
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '11' }
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%11% GROUP BY `blogs`.`id`' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:32:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%11% GROUP BY `blogs`.`id`' at line 1",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `title` LIKE %11% GROUP BY `blogs`.`id`'
}
info [Tue Apr 12 2022 03:04:55 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=1
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%1% GROUP BY `blogs`.`id`' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:32:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%1% GROUP BY `blogs`.`id`' at line 1",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `title` LIKE %1% GROUP BY `blogs`.`id`'
}
info [Tue Apr 12 2022 03:04:58 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:06:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=1
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%1% GROUP BY `blogs`.`id`' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:32:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '%1% GROUP BY `blogs`.`id`' at line 1",
  sqlState: '42000',
  index: 0,
  sql: 'SELECT `blogs`.`id`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like` FROM `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE %1% GROUP BY `blogs`.`id`'
}
info [Tue Apr 12 2022 03:06:32 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:09:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }
info [Tue Apr 12 2022 03:09:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:09:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=1
info [Tue Apr 12 2022 03:09:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:24 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 03:09:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:24 GMT+0800 (China Standard Time)]  { blogs: [], message: '' }


info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:09:57 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:09:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=1
info [Tue Apr 12 2022 03:09:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:09:58 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 03:09:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:09:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:10:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=2
info [Tue Apr 12 2022 03:10:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:10:01 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '2' }
info [Tue Apr 12 2022 03:10:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:10:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:10:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:10:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:10:02 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:10:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:10:02 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  Error: ER_NO_SUCH_TABLE: Table 'blogs.id' doesn't exist
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'blogs.id' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `blogs`.`id` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 03:13:49 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}

info [Tue Apr 12 2022 03:14:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:14:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:14:15 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:14:15 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:14:16 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:14:16 GMT+0800 (China Standard Time)]  Error: ER_NO_SUCH_TABLE: Table 'test-blog.id' doesn't exist
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'test-blog.id' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `id` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:14:16 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  Error: ER_NO_SUCH_TABLE: Table 'test-blog.id' doesn't exist
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'test-blog.id' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `id` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:14:52 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:16:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:16:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:16:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:16:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  Error: ER_NO_SUCH_TABLE: Table 'test-blog.id' doesn't exist
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NO_SUCH_TABLE',
  errno: 1146,
  sqlMessage: "Table 'test-blog.id' doesn't exist",
  sqlState: '42S02',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `id` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 03:16:52 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}

info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `blogs` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:17:49 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `blogs` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%undefined%'"
}
info [Tue Apr 12 2022 03:19:12 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `blogs` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%'"
}
info [Tue Apr 12 2022 03:19:42 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:20:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:20:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:20:39 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:20:39 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:21:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:21:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:21:09 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:21:09 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:21:45 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!

info [Tue Apr 12 2022 03:22:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:22:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:22:14 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:22:14 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:23:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:23:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:23:53 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:23:53 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:23:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs`, `blogs` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%'"
}
info [Tue Apr 12 2022 03:24:17 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '`is`  `NULL` WHERE `blogs`.`title` LIKE '%%'' at line 1
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.count (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:73:102)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:25:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_PARSE_ERROR',
  errno: 1064,
  sqlMessage: "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '`is`  `NULL` WHERE `blogs`.`title` LIKE '%%'' at line 1",
  sqlState: '42000',
  index: 0,
  sql: "SELECT COUNT(*) AS `numrows` FROM `blogs` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` and `comments`.`createdAt` `is`  `NULL` WHERE `blogs`.`title` LIKE '%%'"
}
info [Tue Apr 12 2022 03:26:05 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 03:27:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:27:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:27:04 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:27:04 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:27:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:27:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:27:31 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:27:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:27:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 03:29:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:29:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:29:59 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:29:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:29:59 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 03:30:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:30:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:30:22 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:30:22 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:31:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:31:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:31:04 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:31:04 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 03:32:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:32:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:32:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:32:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:32:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 03:32:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:32:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:32:57 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:32:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:32:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 03:33:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=1
info [Tue Apr 12 2022 03:33:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:33:35 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 03:33:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:33:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    }
  ],
  count: 1,
  message: ''
}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:51:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:51:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:51:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:51:08 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:51:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:51:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:51:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 03:51:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:51:15 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:51:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:51:15 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:52:03 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:20 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 03:53:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:53:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:53:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:53:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:53:57 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:53:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:53:57 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:55:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 03:55:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:55:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:55:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:55:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:55:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:55:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 03:55:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:55:42 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:55:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:55:42 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 03:56:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:56:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:56:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:56:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:56:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:58:00 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 03:59:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:01:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:01:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:01:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:01:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:01:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:01:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:01:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:01:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:01:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:01:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:01:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:03:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:03:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:03:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:08 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:03:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:03:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:03:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:03:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:03:35 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTcwNzUyMSwiZXhwIjoxNjQ5NzExMTIxfQ.ofBAUIaiwO2WIYadVShLu3S4OaaXTHGJr1cOmkkUs2k',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:05:21 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:05:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:05:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:05:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:05:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:05:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:05:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:05:24 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:05:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:05:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}

info [Tue Apr 12 2022 04:05:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:05:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:05:54 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:05:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:05:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:06:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=
info [Tue Apr 12 2022 04:06:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:00 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '' }
info [Tue Apr 12 2022 04:06:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:06:00 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:06:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=2
info [Tue Apr 12 2022 04:06:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:07 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '2' }
info [Tue Apr 12 2022 04:06:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:06:07 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  count: 1,
  message: ''
}
info [Tue Apr 12 2022 04:06:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=2
info [Tue Apr 12 2022 04:06:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:50 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '2' }
info [Tue Apr 12 2022 04:06:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:06:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    }
  ],
  count: 1,
  message: ''
}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:06:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=iijo
info [Tue Apr 12 2022 04:07:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:00 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: 'iijo' }
info [Tue Apr 12 2022 04:07:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:00 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:07:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=iijo
info [Tue Apr 12 2022 04:07:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:04 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: 'iijo' }
info [Tue Apr 12 2022 04:07:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:04 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:07:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=iijo
info [Tue Apr 12 2022 04:07:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:05 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: 'iijo' }
info [Tue Apr 12 2022 04:07:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:05 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=iijo
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: 'iijo' }
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=iijo
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: 'iijo' }
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:06 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:07:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:07:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:53 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:07:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:07:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:07:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:54 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:07:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:07:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=5615+
info [Tue Apr 12 2022 04:07:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:07:58 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '5615 ' }
info [Tue Apr 12 2022 04:07:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:07:58 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 04:08:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:08:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:04 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:04 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=
info [Tue Apr 12 2022 04:08:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:07 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '' }
info [Tue Apr 12 2022 04:08:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:07 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:08:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:11 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:11 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:08:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:13 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:13 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:08:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:16 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:16 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=10&itemCount=5&title=
info [Tue Apr 12 2022 04:08:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:21 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '10', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:21 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=9&itemCount=5&title=
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '9', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=8&itemCount=5&title=
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '8', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=7&itemCount=5&title=
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '7', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:25 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=6&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '6', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=5&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '5', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=4&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '4', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  { blogs: [], count: 6, message: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:08:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:11:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:11:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:18 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:11:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:29 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:29 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=4
info [Tue Apr 12 2022 04:11:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:33 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '4' }
info [Tue Apr 12 2022 04:11:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    }
  ],
  count: 1,
  message: ''
}
info [Tue Apr 12 2022 04:11:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:11:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:37 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:37 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:40 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:11:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 04:11:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:42 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:11:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:42 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 04:11:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:11:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:11:44 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:11:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:11:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:12:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=
info [Tue Apr 12 2022 04:12:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:18 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '' }
info [Tue Apr 12 2022 04:12:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:12:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:12:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:12:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:21 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:12:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:12:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 04:12:30 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 04:12:33 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/14
info [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  Error occured:  You thumb up it before. Can't do it again!
info [Tue Apr 12 2022 04:12:34 GMT+0800 (China Standard Time)]  { message: "You thumb up it before. Can't do it again!" }
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 04:50:43 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
error [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  Error occured:  Email is not exist!
info [Tue Apr 12 2022 05:21:34 GMT+0800 (China Standard Time)]  { message: 'Email is not exist!' }
info [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
error [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  Error occured:  Email is not exist!
info [Tue Apr 12 2022 05:21:45 GMT+0800 (China Standard Time)]  { message: 'Email is not exist!' }
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signup
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Mr Dev',
  email: 'mrdev0803@gmail.com',
  password: 'asdfQWER!@#$'
}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTcxMjEyNiwiZXhwIjoxNjQ5NzE1NzI2fQ.x9H863fbAntwOh1xXs1vmfH9arzIlrT2VM6RlqJpVuA',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:22:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
error [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  ReferenceError: token is not defined
    at signinGoogle (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\auth.controller.js:62:17)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
info [Tue Apr 12 2022 05:22:17 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }

info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTcxMjIzOSwiZXhwIjoxNjQ5NzE1ODM5fQ.cNA7QFAmFTGEMRaiRafVjD-ACUFaPpvL55ACNTkDEu8',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:23:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTcxMjI5MywiZXhwIjoxNjQ5NzE1ODkzfQ._3Nyyojyil8zSjJxA5n3tcC6KBEyjZOYlOJtxXS_mt4',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 05:24:53 GMT+0800 (China Standard Time)]  BODY: {}

info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTcyNDE4OSwiZXhwIjoxNjQ5NzI3Nzg5fQ.NFbdTzCnk9Q6O-raRczlIEljYXcYS8FljwinDbMTH9Q',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:43:09 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:43:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 08:43:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:43:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:43:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:46:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:46:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 08:46:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:46:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:46:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:07 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 08:47:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:47:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/null
info [Tue Apr 12 2022 08:47:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:47:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:47:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:48:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:48:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:48:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:48:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:48:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: null
  },
  message: ''
}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png' ],
  message: ''
}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/user
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  BODY: {
  username: 'Mr Dev',
  oldPassword: '',
  password: '',
  photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  {
  user: OkPacket {
    fieldCount: 0,
    affectedRows: 1,
    insertId: 0,
    serverStatus: 2,
    warningCount: 0,
    message: '(Rows matched: 1  Changed: 1  Warnings: 0',
    protocol41: true,
    changedRows: 1,
    insert_id: null,
    affected_rows: 1,
    changed_rows: 1
  },
  message: ''
}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:22 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 08:49:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 08:49:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:24 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 08:49:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 08:49:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 08:49:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:26 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 08:49:26 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:26 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 08:49:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 08:49:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:27 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 08:49:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTcyNDU3NSwiZXhwIjoxNjQ5NzI4MTc1fQ.KLM-WXsPQbBh7_2S03qt40tJOJul-yFNyRQ7ZRIO3kU',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:49:35 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}



info [Tue Apr 12 2022 08:58:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 08:58:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:58:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 08:58:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:58:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 08:58:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 08:58:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 08:58:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 08:58:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 08:58:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:01:49 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:07:04 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTcyNTY5MSwiZXhwIjoxNjQ5NzI5MjkxfQ.AreHz8G6XQsXioOqp3N-kqzYV8qcaV0A6eNmdWOdCsg',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:08:11 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:08:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 09:08:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:08:16 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 09:08:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:08:16 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 6,
  message: ''
}
info [Tue Apr 12 2022 09:08:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:08:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:08:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:08:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:08:17 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:09:54 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}

info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:13:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:14:08 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:25:31 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:51:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:51:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:51:01 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:51:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:51:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:51:21 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:51:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 09:51:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:51:25 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/2a9c4c39-f4b6-4269-a533-26adafddae14-mine.jpeg' ],
  message: ''
}
info [Tue Apr 12 2022 09:51:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 09:51:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:51:28 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 09:51:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 09:51:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:39 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title with Image 1',
  text: 'Title with Image 1',
  imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg'
}
info [Tue Apr 12 2022 09:51:40 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 09:51:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:51:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:51:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:51:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:51:41 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:52:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 09:52:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:52:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 09:52:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:52:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 7,
  message: ''
}
info [Tue Apr 12 2022 09:52:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 09:52:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:52:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 09:52:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:52:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    }
  ],
  count: 7,
  message: ''
}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080//uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/17
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      mainBlogId: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080//uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:52:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/17
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      mainBlogId: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 09:53:21 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/17
info [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 09:53:47 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTcyOTUwNywiZXhwIjoxNjQ5NzMzMTA3fQ.-vgbp7EdCTewARQRjG-xxO5XxKYVGNP1_wy7FajgNF8',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:11:47 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 10:11:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 10:11:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:11:50 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 10:11:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:11:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 7,
  message: ''
}
info [Tue Apr 12 2022 10:12:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 10:12:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:12:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:12:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:12:11 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png' ],
  message: ''
}
info [Tue Apr 12 2022 10:12:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 10:12:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:12:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:12:13 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Image with Title 2',
  text: 'Image with Title 2',
  imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png'
}
info [Tue Apr 12 2022 10:12:13 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 10:12:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:12:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:12:15 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:12:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:12:15 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 10:17:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:17:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:17:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:17:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:17:45 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 10:17:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:17:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:17:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:17:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:17:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 10:17:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 10:17:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:17:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:17:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:17:58 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  BODY: {
  title: 'asdf',
  text: 'asdf',
  imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg'
}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:18:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 10:18:03 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:18:03 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:18:03 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:18:03 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:18:03 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 10:18:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 10:18:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:18:14 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 10:18:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:18:14 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 10:21:22 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 10:21:22 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:21:22 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 10:21:22 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:21:22 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 10:21:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 10:21:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:21:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:21:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:21:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 10:21:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 10:21:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 10:21:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 10:21:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 10:21:38 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczMzI1OSwiZXhwIjoxNjQ5NzM2ODU5fQ.iB9j-A6pFEjZxGNA59up8sT6XRKW-jEkE9HmD2h5DCU',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:14:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:14:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:14:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:14:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:14:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:14:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:14:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 11:14:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:14:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:14:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:14:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 11:15:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:15:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:15:06 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:15:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:15:06 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:16:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:16:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:16:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:16:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:16:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:16:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:16:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:16:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:16:58 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:16:58 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:16:58 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:17:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:17:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:17:00 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:17:00 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:17:00 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:17:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 11:17:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:17:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:17:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:17:01 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 11:18:05 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:18:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:18:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:18:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:18:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:18:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:19:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:19:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:19:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:19:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:19:11 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:19:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:19:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:19:15 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:19:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:19:15 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:23:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:23:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:23:28 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:23:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:23:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:23:33 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:24:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:31 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 11:24:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 11:24:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:39 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:42 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:42 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:42 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:42 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:42 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:52 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 11:24:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:53 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 11:24:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 11:24:54 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 11:24:54 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:54 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:24:54 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:54 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 11:24:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 11:24:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 11:24:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 11:24:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 11:24:56 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczNzUxOCwiZXhwIjoxNjQ5NzQxMTE4fQ.b1yGuWe-osjGCx1ogBI2Do89PGMcS_xxpmhQ3ybeiEA',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:25:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:25:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:25:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:25:44 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:25:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:25:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:28:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:28:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:28:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:28:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:28:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:28:37 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/google
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  BODY: { email: 'mrdev0803@gmail.com', google: '113433535940111337124' }
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  {
  userId: 16,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsImlhdCI6MTY0OTczNzc4NCwiZXhwIjoxNjQ5NzQxMzg0fQ.iQZL6hyRH57N4t9nH5cI-J2b_BSM69Yor6cvMdjRz40',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:29:44 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:29:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:29:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:29:48 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:29:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:29:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:29:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:29:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:29:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:29:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:29:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:29:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:29:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:29:56 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:29:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:29:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:31:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:31:23 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:31:23 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:23 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:31:23 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:23 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:31:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:31:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:31:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:31:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:31:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:25 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:31:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:25 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:31:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:31:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:45 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:31:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:45 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:31:52 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 16,
    username: 'Mr Dev',
    email: 'mrdev0803@gmail.com',
    photoUrl: './uploads/98087252-f97b-49e9-96ee-b4f5ac437101-vali-stirbei.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczODAxNCwiZXhwIjoxNjQ5NzQxNjE0fQ.zqThl1Gre2LsGPBpYrPyh9LldnpFdjH6LqOtbC3K3SM',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:33:34 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:33:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:33:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:33:40 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:33:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:33:40 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:38:26 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 12:38:26 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:38:26 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:38:26 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 12:38:26 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczODMwNiwiZXhwIjoxNjQ5NzQxOTA2fQ.k9q25Lo3OBUPraVr2xKziEGZigPNmbFATPUIbUPUdAQ',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:38:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:38:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:38:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:38:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:38:27 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:38:32 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:38:32 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:38:32 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:38:32 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:38:32 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczODk2NSwiZXhwIjoxNjQ5NzQyNTY1fQ.00Ol88UQBL17S8SlAH-riLwkA0sCuU__stxq9yZijTE',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:25 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:49:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:49:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:33 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:49:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTczODk4MywiZXhwIjoxNjQ5NzQyNTgzfQ.CPB_xe6brD0Hf1IXBHu9bEX4-y-74aGXIsRC4pg4xvY',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:43 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:49:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:49:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:47 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:49:47 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:47 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:49:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:49:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:49:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:49:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:51 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:51 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:49:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 12:49:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:49:57 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/660fe3bd-d41a-4b8f-a79f-28cbcbdf4075-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 12:49:58 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:49:58 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:49:58 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:49:58 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title1',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: './uploads/660fe3bd-d41a-4b8f-a79f-28cbcbdf4075-sam-wood.jpg'
}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:50:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:50:14 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:50:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:50:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:50:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:50:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:50:56 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:51:02 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:51:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 12:51:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:51:08 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/7db24eb7-8fd0-4539-ba2d-864a9779dfdc-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 12:51:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:51:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:14 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title1',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: './uploads/7db24eb7-8fd0-4539-ba2d-864a9779dfdc-sam-wood.jpg'
}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:51:17 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:53:11 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:53:11 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:11 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:11 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:53:11 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:53:18 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:53:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:53:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:24 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: ''
}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:53:27 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:54:16 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:54:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:54:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:54:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:54:24 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:54:24 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: ''
}

info [Tue Apr 12 2022 12:55:00 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:55:00 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:00 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:55:00 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: ''
}
info [Tue Apr 12 2022 12:55:00 GMT+0800 (China Standard Time)]  { message: 'Your blog is updated successfully!' }
info [Tue Apr 12 2022 12:55:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:55:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:06 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:55:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:06 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:55:08 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:55:08 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:08 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:55:08 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:08 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:55:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:55:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:55:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:10 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:55:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:55:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:55:14 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: null
}
info [Tue Apr 12 2022 12:55:14 GMT+0800 (China Standard Time)]  { message: 'Your blog is updated successfully!' }
info [Tue Apr 12 2022 12:55:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:55:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:16 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:55:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:16 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:55:20 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}

info [Tue Apr 12 2022 12:56:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:56:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:05 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title1',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:56:06 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:56:06 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:06 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:06 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:06 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title1',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: null,
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:56:07 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:56:07 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:07 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:07 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
  imageUrl: ''
}
info [Tue Apr 12 2022 12:56:07 GMT+0800 (China Standard Time)]  { message: 'Your blog is updated successfully!' }
info [Tue Apr 12 2022 12:56:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:56:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:56:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: '',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 12:56:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: '',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:56:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:56:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:37 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
      imageUrl: '',
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:56:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 12:56:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:39 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:39 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: 'asdffffffffffffffffffaaaaaaaaaaaaaaaaaaaaaaaaaaDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',
    imageUrl: '',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 12:56:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 12:56:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:44 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:45 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 12:56:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:56:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:46 GMT+0800 (China Standard Time)]  BODY: {
  title: 'Title12',
  text: '11',
  imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg'
}
info [Tue Apr 12 2022 12:56:46 GMT+0800 (China Standard Time)]  { message: 'Your blog is updated successfully!' }
info [Tue Apr 12 2022 12:56:47 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:56:47 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:47 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:56:47 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:47 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 9,
  message: ''
}
info [Tue Apr 12 2022 12:56:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 12:56:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:56:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/thumbup/5
info [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  Error occured:  You can't thumb up yourself!
info [Tue Apr 12 2022 12:56:53 GMT+0800 (China Standard Time)]  { message: "You can't thumb up yourself!" }
info [Tue Apr 12 2022 12:57:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 12:57:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:57:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:14 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/643f3c93-8396-4f4f-a6be-66767cb69752-mine.jpeg' ],
  message: ''
}
info [Tue Apr 12 2022 12:57:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 12:57:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:57:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:17 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png' ],
  message: ''
}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  BODY: {
  title: 'QWER',
  text: 'QWER',
  imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png'
}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:18 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 12:57:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 12:57:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:24 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:57:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:24 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 12:57:27 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/20
info [Tue Apr 12 2022 12:57:27 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:27 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 12:57:27 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:27 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      mainBlogId: null,
      like: 0
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 12:57:44 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:57:44 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:44 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:57:44 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:44 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 12:57:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=10&title=
info [Tue Apr 12 2022 12:57:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:48 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '10', title: '' }
info [Tue Apr 12 2022 12:57:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 12:57:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=20&title=
info [Tue Apr 12 2022 12:57:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '20', title: '' }
info [Tue Apr 12 2022 12:57:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 12:57:52 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 12:57:52 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 12:57:52 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 12:57:52 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 12:57:52 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:07:46 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 13:07:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 13:07:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:07:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:07:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:07:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}

info [Tue Apr 12 2022 13:09:20 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 13:09:20 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:09:20 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:09:20 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:09:20 GMT+0800 (China Standard Time)]  { message: 'Your blog is deleted successfully!' }
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  Error: ER_NON_UNIQ_ERROR: Column 'id' in field list is ambiguous
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readUsers (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\user.service.js:19:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NON_UNIQ_ERROR',
  errno: 1052,
  sqlMessage: "Column 'id' in field list is ambiguous",
  sqlState: '23000',
  index: 0,
  sql: 'SELECT `id`, `username`, `email`, `photoUrl` FROM `Blogs`, `users` WHERE `id` = 5 AND `id` = 13'
}
info [Tue Apr 12 2022 13:09:34 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 13:16:30 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:16:30 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:16:30 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:16:30 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:16:30 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:16:34 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 13:16:38 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 13:16:38 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:16:38 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:16:38 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:16:38 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 13:31:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:31:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:31:48 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:31:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:31:48 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTc0MTUxNywiZXhwIjoxNjQ5NzQ1MTE3fQ.lemsHSRlMipXuwhreBEI8SM_yU5IrRkyBoDFvzGIsDA',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:31:57 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:31:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:31:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:31:59 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:31:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:31:59 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 10,
  message: ''
}
info [Tue Apr 12 2022 13:32:14 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 13:32:14 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:14 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:32:14 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:14 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg' ],
  message: ''
}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  BODY: {
  title: 'qq',
  text: 'qq',
  imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg'
}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  { message: 'Your blog is saved successfully!' }
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:21 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:24 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=qq
info [Tue Apr 12 2022 13:32:24 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:24 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: 'qq' }
info [Tue Apr 12 2022 13:32:24 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:24 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 13:32:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:32:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:28 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:28 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:31 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 13:32:31 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:31 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:31 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:31 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:32:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:33 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=qq
info [Tue Apr 12 2022 13:32:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:36 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: 'qq' }
info [Tue Apr 12 2022 13:32:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:36 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 13:32:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=a
info [Tue Apr 12 2022 13:32:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:39 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: 'a' }
info [Tue Apr 12 2022 13:32:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:39 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 13:32:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=1
info [Tue Apr 12 2022 13:32:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:43 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '1' }
info [Tue Apr 12 2022 13:32:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:43 GMT+0800 (China Standard Time)]  { blogs: [], count: 2, message: '' }
info [Tue Apr 12 2022 13:32:45 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:32:45 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:45 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:45 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:45 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:32:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  Error: Only positive integers are allowed when offseting SQL results!
    at Single._prepare_for_limit_and_offset (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:117:22)
    at Single.offset (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1040:34)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:48:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:80:23)
info [Tue Apr 12 2022 13:33:46 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:22:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT `blogs`.`id`, `blogs`.`userId` AS `userId`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like`, COUNT (*) AS `count` FROM `blogs`, `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%' AND `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%' GROUP BY `blogs`.`id`"
}
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:48 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:49 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:33:49 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:49 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:49 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:49 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:33:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:50 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:50 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:51 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=0&itemCount=5&title=
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '0', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  Error: Only positive integers are allowed when offseting SQL results!
    at Single._prepare_for_limit_and_offset (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:117:22)
    at Single.offset (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\query_builder.js:1040:34)
    at Object.readMainBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:48:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5)
    at async readBlogs (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\controllers\blogs.controller.js:80:23)
info [Tue Apr 12 2022 13:33:56 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  Unknown Error occured! Please contact with Manager!
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  Error: ER_NONUNIQ_TABLE: Not unique table/alias: 'blogs'
    at Query.Sequence._packetToError (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Sequence.js:47:14)
    at Query.ErrorPacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\sequences\Query.js:79:18)
    at Protocol._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:291:23)
    at Parser._parsePacket (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:433:10)
    at Parser.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Parser.js:43:10)
    at Protocol.write (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:38:16)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:88:28)
    at Socket.<anonymous> (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:526:10)
    at Socket.emit (events.js:400:28)
    at addChunk (internal/streams/readable.js:293:12)
    --------------------
    at Protocol._enqueue (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\protocol\Protocol.js:144:48)
    at PoolConnection.query (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\mysql\lib\Connection.js:198:25)
    at Single._exec (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:15:30)
    at WrapperPromise.invoke (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:32:14)
    at F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:24:18
    at new Promise (<anonymous>)
    at WrapperPromise.promisify (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\WrapperPromise.js:21:16)
    at Single.get (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\node_modules\node-querybuilder\drivers\mysql\query_exec.js:86:93)
    at Object.readMainBlogsCount (F:\Web Projects\React.js Projects\Test Blog for Beaumont\Server\server\services\blogs.service.js:22:14)
    at processTicksAndRejections (internal/process/task_queues.js:95:5) {
  code: 'ER_NONUNIQ_TABLE',
  errno: 1066,
  sqlMessage: "Not unique table/alias: 'blogs'",
  sqlState: '42000',
  index: 0,
  sql: "SELECT `blogs`.`id`, `blogs`.`userId` AS `userId`, `users`.`username`, `blogs`.`title`, `blogs`.`text`, `blogs`.`imageUrl`, COUNT(likes.blogId) AS `like`, COUNT (*) AS `count` FROM `blogs`, `blogs` JOIN `users` ON `blogs`.`userId` = `users`.`id` LEFT JOIN `likes` ON `blogs`.`id` = `likes`.`blogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` LEFT JOIN `comments` ON `blogs`.`id` = `comments`.`commentBlogId` WHERE `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%' AND `comments`.`createdAt` is NULL AND `blogs`.`title` LIKE '%%' GROUP BY `blogs`.`id`"
}
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  { message: 'Unknown Error occured! Please contact with Manager!' }
info [Tue Apr 12 2022 13:34:37 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:35:53 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:36:12 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:36:12 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:36:12 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:36:12 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:36:12 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=aa
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: 'aa' }
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=aa
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: 'aa' }
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:36:15 GMT+0800 (China Standard Time)]  { blogs: [], count: 0, message: '' }
info [Tue Apr 12 2022 13:36:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:36:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:36:19 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:36:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:36:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:39:05 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:39:06 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:39:06 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:40:13 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:40:13 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:40:13 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:40:13 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:40:13 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:42:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:42:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:42:19 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:42:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:42:19 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:43:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:10 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:10 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:16 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/upload/image
info [Tue Apr 12 2022 13:43:16 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:16 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:16 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:17 GMT+0800 (China Standard Time)]  {
  imageUrls: [ './uploads/ed7fb6fe-e8b9-4c65-9c6c-4b45358f3340-thomas-tan.png' ],
  message: ''
}
info [Tue Apr 12 2022 13:43:19 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:43:19 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:19 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:19 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:19 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/auth/signin
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  BODY: { email: 'test@gmail.com', password: '1234' }
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  {
  userId: 13,
  token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImlhdCI6MTY0OTc0MjIwOSwiZXhwIjoxNjQ5NzQ1ODA5fQ.sYfkLzosQf16apmth1cU4o15vDgs95Bsxw9dfw2hK_I',
  expirationTime: 3600,
  message: ''
}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:29 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:33 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:43:33 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:33 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:33 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:33 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 13:43:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:36 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:36 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:37 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=3&itemCount=5&title=
info [Tue Apr 12 2022 13:43:37 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:37 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '3', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:37 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:37 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 21,
      userId: 13,
      username: 'Test User',
      title: 'qq',
      text: 'qq',
      imageUrl: './uploads/89e959c1-c309-4c66-98e1-43aa3c42f79d-sam-wood.jpg',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:39 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=2&itemCount=5&title=
info [Tue Apr 12 2022 13:43:39 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:39 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '2', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:39 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:39 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 16,
      userId: 13,
      username: 'Test User',
      title: 'Title6',
      text: 'Title6',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 17,
      userId: 13,
      username: 'Test User',
      title: 'Title with Image 1',
      text: 'Title with Image 1',
      imageUrl: './uploads/994ed6ff-0392-4bd8-ad04-468b8f9575b7-sam-wood.jpg',
      like: 0
    },
    RowDataPacket {
      id: 18,
      userId: 13,
      username: 'Test User',
      title: 'Image with Title 2',
      text: 'Image with Title 2',
      imageUrl: './uploads/7b1c746b-557b-455f-a79d-ed4a0470e1f5-erin-rull.png',
      like: 0
    },
    RowDataPacket {
      id: 19,
      userId: 13,
      username: 'Test User',
      title: 'asdf',
      text: 'asdf',
      imageUrl: './uploads/fdbaabde-2c46-4f1c-b298-0e7c12b92987-lin-yong-zu.jpg',
      like: 0
    },
    RowDataPacket {
      id: 20,
      userId: 13,
      username: 'Test User',
      title: 'QWER',
      text: 'QWER',
      imageUrl: './uploads/c09973a8-749c-4fbd-a343-2c8368603bb7-vali-stirbei.png',
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:40 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blogs?pageIndex=1&itemCount=5&title=
info [Tue Apr 12 2022 13:43:40 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:40 GMT+0800 (China Standard Time)]  QUERY: { pageIndex: '1', itemCount: '5', title: '' }
info [Tue Apr 12 2022 13:43:40 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:40 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      like: 2
    },
    RowDataPacket {
      id: 6,
      userId: 13,
      username: 'Test User',
      title: 'Title2',
      text: 'Title2',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 7,
      userId: 13,
      username: 'Test User',
      title: 'Title3',
      text: 'Title3',
      imageUrl: null,
      like: 0
    },
    RowDataPacket {
      id: 8,
      userId: 13,
      username: 'Test User',
      title: 'Title4',
      text: 'Title4',
      imageUrl: null,
      like: 1
    },
    RowDataPacket {
      id: 15,
      userId: 13,
      username: 'Test User',
      title: 'Title5',
      text: 'Title5',
      imageUrl: null,
      like: 0
    }
  ],
  count: 11,
  message: ''
}
info [Tue Apr 12 2022 13:43:41 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/blog/5
info [Tue Apr 12 2022 13:43:41 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:41 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:41 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:41 GMT+0800 (China Standard Time)]  {
  blogs: [
    RowDataPacket {
      id: 5,
      userId: 13,
      username: 'Test User',
      title: 'Title12',
      text: '11',
      imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
      mainBlogId: 5,
      like: 2
    },
    RowDataPacket {
      id: 14,
      userId: 14,
      username: 'Test1',
      title: 'Comment2 to Title2',
      text: 'Comment2 to Title2',
      imageUrl: null,
      mainBlogId: 5,
      like: 2
    }
  ],
  message: ''
}
info [Tue Apr 12 2022 13:43:43 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:43:43 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:43 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:43 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:43 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:50 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:43:59 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:58:55 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:58:55 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:58:55 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:58:55 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:58:55 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:01 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:10 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:28 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:59:28 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:28 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:28 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:28 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 13:59:36 GMT+0800 (China Standard Time)]  {
  user: RowDataPacket {
    id: 13,
    username: 'Test User',
    email: 'test@gmail.com',
    photoUrl: './uploads/f3975bba-aed4-4ff4-85a6-83be6e4a9b98-thomas-tan.png'
  },
  message: ''
}
info [Tue Apr 12 2022 14:00:18 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/blogs/certainBlog/5
info [Tue Apr 12 2022 14:00:18 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 14:00:18 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 14:00:18 GMT+0800 (China Standard Time)]  BODY: {}
info [Tue Apr 12 2022 14:00:18 GMT+0800 (China Standard Time)]  {
  blog: RowDataPacket {
    id: 5,
    userId: 13,
    username: 'Test User',
    title: 'Title12',
    text: '11',
    imageUrl: './uploads/9d8b09b7-8d73-460d-bfea-277de98f9ccd-sam-wood.jpg',
    mainBlogId: 5,
    like: 2
  },
  message: ''
}
info [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  BODY: {}
error [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 14:08:17 GMT+0800 (China Standard Time)]  { message: 'Unauthorized! Please log in!' }

info [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  URL: http://localhost:8080/api/v1/users/me
info [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  PARAMS: {}
info [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  QUERY: {}
info [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  BODY: {}
error [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  Error occured:  Unauthorized! Please log in!
info [Tue Apr 12 2022 15:56:57 GMT+0900 (Japan Standard Time)]  { message: 'Unauthorized! Please log in!' }

































